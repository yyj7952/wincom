<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="kr.co.wincom.imcs.api.authorizeNView.AuthorizeNViewDao">

	<resultMap type="HashMap" id="mBuyInfo">
		<result property="RESERVED_PRICE" column="RESERVED_PRICE" javaType="String"/>
		<result property="EXPIRED_DATE" column="EXPIRED_DATE" javaType="String"/>
		<result property="EXPIRED_DATE_TMP" column="EXPIRED_DATE_TMP" javaType="String"/>
		<result property="REFUND_YN" column="REFUND_YN" javaType="String"/>
	</resultMap>
	
	<resultMap type="HashMap" id="mThumnail">
		<result property="CONTENT_VALUE" column="CONTENT_VALUE" javaType="String"/>
		<result property="SECOND_VALUE" column="SECOND_VALUE" javaType="String"/>
		<result property="POSTER_TYPE" column="POSTER_TYPE" javaType="String"/>		
	</resultMap>
	
	<resultMap type="HashMap" id="nScreenBuyChk">
		<result property="DATA_CHK" column="DATA_CHK" javaType="String"/>
		<result property="PRODUCT_ID" column="PRODUCT_ID" javaType="String"/>
	</resultMap>
	
	<resultMap type="HashMap" id="albumProductInfo">
		<result property="P_PRODUCT_ID" column="P_PRODUCT_ID" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="PRODUCT_ID" column="PRODUCT_ID" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="CONTENTS_ID" column="CONTENTS_ID" javaType="String" typeHandler="EmptyStringIfNull"/>
	</resultMap>
	
	<resultMap type="HashMap" id="nSysdateInfo">
		<result property="SYSDATE_CURRENT" column="SYSDATE_CURRENT" javaType="String"/>
		<result property="SYSDATE_1YEARAGO" column="SYSDATE_1YEARAGO" javaType="String"/>
		<result property="WATCH_DATE" column="WATCH_DATE" javaType="String"/>		
	</resultMap>
	
	<resultMap type="HashMap" id="nWatchSubscriptionInfo">
		<result property="TERR_TYPE" column="TERR_TYPE" javaType="String"/>
		<result property="AGO_DATE" column="AGO_DATE" javaType="String"/>
	</resultMap>
	
	<resultMap type="HashMap" id="nscreenAssetInfo">
		<result property="GENRE_SMALL" column="GENRE_SMALL" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="SUGGESTED_PRICE" column="SUGGESTED_PRICE" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="TERR_YN" column="TERR_YN" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="TERR_PERIOD" column="TERR_PERIOD" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="TERR_ED_DATE" column="TERR_ED_DATE" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="ONAIR_DATE" column="ONAIR_DATE" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="PREVIEW_PERIOD" column="PREVIEW_PERIOD" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="CP_ID" column="CP_ID" javaType="String" typeHandler="EmptyStringIfNull"/>		
		<!-- 2019.11.01 - VOD 정산 프로세스 개선 : IPTV어셋용 메타 정보 조회 -->
		<result property="ASSET_NAME" column="ASSET_NAME" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="RATING_CD" column="RATING_CD" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="RUN_TIME" column="RUN_TIME" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="CP_ID_UFLIX" column="CP_ID_UFLIX" javaType="String" typeHandler="EmptyStringIfNull"/>
		<result property="SERIES_NO" column="SERIES_NO" javaType="String" typeHandler="EmptyStringIfNull"/>		
	</resultMap>
	
	<!-- 2018.10.31 - 추가 화질의 프로파일 정보 저장 -->
	<resultMap type="HashMap" id="vodProfile">
		<result property="M3U8_TYPE" column="M3U8_TYPE" javaType="String"/>
		<result property="CASTIS_M3U8" column="CASTIS_M3U8" javaType="String"/>
		<result property="ONNURI_M3U8" column="ONNURI_M3U8" javaType="String"/>
		<result property="NODE_GROUP" column="NODE_GROUP" javaType="String"/>
	</resultMap>
	
	<!-- SVOD가 아닌 상품정보 조회 -->
	<select id="getProdInfo" resultType="ContTypeVO">
	<!-- <![CDATA[ -->
			SELECT DISTINCT B.PRODUCT_TYPE AS CONTS_TYPE,
			       B.PRODUCT_ID AS PRODUCT_ID,
			       B.PRODUCT_NAME AS PRODUCT_NAME,
			       B.PRICE AS PRICE,
			       C.ASSET_NAME AS CONTS_NAME
			       <if test="nWatchYn.equals('Y'.toString())"> 
			       ,MCUSTUSER.NUF_GET_NSCREEN_INFO(#{albumId}, (SELECT NVL(TEST_SBC,'N') FROM PT_VO_CUSTOM_ID WHERE SA_ID = #{saId} and mac_addr = #{stbMac})) AS NSCREEN_YN
			       </if>
			  FROM IMCSUSER.PT_PD_PACKAGE_DETAIL A,
			       IMCSUSER.PT_PD_PACKAGE B ,
			       IMCSUSER.PT_LA_PACKAGE_ASSET C 
			 WHERE C.NSC_ALBUM_ID = #{albumId}
			   AND B.PRODUCT_ID = A.PRODUCT_ID
			   AND A.CONTENTS_ID = C.ASSET_ID
			   AND B.PRODUCT_TYPE <![CDATA[<>]]> '3'
			 ORDER BY B.PRODUCT_TYPE
<!-- 	]]> -->
	</select>
	
	
	<!-- 이벤트 타입 조회 -->
	<select id="getEventType" resultType="String">
		SELECT DISTINCT NVL(SUBSTR(C.MAXIMUM_VIEWING_LENGTH, 1, LENGTH(C.MAXIMUM_VIEWING_LENGTH) - 2), '48') AS EVENT_TYPE
		  FROM IMCSUSER.PT_LA_TITLE_ASSET C ,
		       IMCSUSER.PT_LA_PACKAGE_ASSET A 
		 WHERE C.ADI_PRODUCT_ID = A.ADI_PRODUCT_ID
		   AND A.NSC_ALBUM_ID = #{albumId}
	</select>
	
	
	<!-- 이벤트 타입 조회 -->
	<select id="getBuyInfo" resultMap="mBuyInfo">
	    SELECT BUY_AMT AS RESERVED_PRICE,
	          EXPIRED_DATE,
	          ( TO_CHAR(TO_DATE(SUBSTR(CASE WHEN NVL(REFUND_YN,'N') = 'R' THEN TO_CHAR(SYSDATE,'YYYYMMDDHH24MI') ELSE #{buyingDate} END , 1, 12), 'YYYYMMDDHH24MI')
	          + TO_NUMBER(#{eventType})/24, 'YYYYMMDDHH24MI') || SUBSTR(CASE WHEN NVL(REFUND_YN,'N') = 'R' THEN TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') ELSE #{buyingDate} END, 13, 2) ) EXPIRED_DATE_TMP,
	          NVL(REFUND_YN,'N') AS REFUND_YN
	     FROM PT_VO_BUY_NSC
		WHERE SA_ID = #{saId}
		  AND MAC_ADDR = #{stbMac}
		  AND BUY_DATE = #{buyingDate}
		  AND PRODUCT_ID = #{albumId}
		  <![CDATA[
	      AND NVL(REFUND_YN, 'N') <> 'P'
	      AND NVL(regexp_substr(replace(replace(ERROR_MSG, '||', '|Z|'), '|', '^'), '[^^]+', 1,4,'i'), 'N') != 'X'
	      ]]>
	</select>
	
	
	<!-- 선물내역 조회 -->
	<select id="getPresentCnt" resultType="Integer">
		SELECT COUNT(*) AS DATA_CHK 
		  FROM DUAL 
		 WHERE EXISTS (
		        SELECT C_EXPIRED_MM 
		          FROM (
		                SELECT TRUNC((TO_DATE(A.EXPIRED_DATE, 'YYYYMMDDHH24MISS') - SYSDATE)*24*60, 0) C_EXPIRED_MM 
		                  FROM PT_VO_PRESENT A 
		                 WHERE A.RCV_SA_ID = #{saId}
		                   AND A.PRESENT_DATE = #{buyingDate}
		                   AND A.USE_YN = 'Y'
		                   AND A.CONTENTS_ID IN (
		                        SELECT ASSET_ID 
		                          FROM IMCSUSER.PT_LA_PACKAGE_ASSET 
		                         WHERE NSC_ALBUM_ID = #{albumId}
		                        UNION
		                         SELECT ASSET_ID 
		                          FROM IMCSUSER.PT_LA_PACKAGE_ASSET 
		                         WHERE ADI_ALBUM_ID = #{albumId}
		                        UNION
		                         SELECT NSC_ALBUM_ID 
		                          FROM IMCSUSER.PT_LA_PACKAGE_ASSET 
		                         WHERE NSC_ALBUM_ID = #{albumId}  
		                       )
		               ) X 
		         WHERE C_EXPIRED_MM > 0
		       )
	</select>
	
	
	<!-- PPV 구매내역 조회 -->
	<select id="chkBuyContType1" resultType="Integer">
		SELECT COUNT(*) AS DATA_CHK 
		  FROM DUAL 
		 WHERE EXISTS (
		        SELECT C_EXPIRED_MM 
		          FROM (
		                SELECT TRUNC((TO_DATE(A.EXPIRED_DATE, 'YYYYMMDDHH24MISS') - SYSDATE)*24*60, 0) C_EXPIRED_MM 
		                  FROM PT_VO_BUY_NSC A 
		                 WHERE A.SA_ID = #{saId}
		                   AND A.BUY_DATE = #{buyingDate}
		                   AND NVL(A.REFUND_YN, 'N') <![CDATA[<>]]> 'P'
		                   AND NVL(regexp_substr(replace(replace(A.ERROR_MSG, '||', '|Z|'), '|', '^'), '[^^]+', 1,4,'i'), 'N') != 'X'
		                   AND A.PRODUCT_ID IN (
		                        SELECT ASSET_ID 
		                          FROM IMCSUSER.PT_LA_PACKAGE_ASSET 
		                         WHERE NSC_ALBUM_ID = #{albumId}
		                        UNION
		                         SELECT ASSET_ID 
		                          FROM IMCSUSER.PT_LA_PACKAGE_ASSET 
		                         WHERE ADI_ALBUM_ID = #{albumId}
		                        UNION
		                         SELECT NSC_ALBUM_ID 
		                          FROM IMCSUSER.PT_LA_PACKAGE_ASSET 
		                         WHERE NSC_ALBUM_ID = #{albumId}
		                       )
		               ) X 
		         WHERE C_EXPIRED_MM <![CDATA[>]]> 0
		       )
	</select>
	
	
	<!-- PVOD 구매내역 조회 -->
	<select id="chkBuyContType2" resultType="Integer">
		SELECT COUNT(*) AS DATA_CHK 
          FROM DUAL 
         WHERE EXISTS (
                SELECT C_EXPIRED_MM 
                  FROM (
                        SELECT TRUNC((TO_DATE(A.EXPIRED_DATE, 'YYYYMMDDHH24MISS') - SYSDATE)*24*60, 0) C_EXPIRED_MM 
                          FROM PT_VO_BUY_NSC A,
                          (SELECT DISTINCT A.PRODUCT_ID
                          FROM IMCSUSER.PT_PD_PACKAGE_DETAIL A,
                               IMCSUSER.PT_PD_PACKAGE B,
                               IMCSUSER.PT_LA_ASSET_INFO C 
                         WHERE C.ALBUM_ID = #{albumId}
                           AND C.SCREEN_TYPE = 'N'
                           AND A.PRODUCT_ID = B.PRODUCT_ID
                           AND A.CONTENTS_ID = C.ASSET_ID
                           AND B.PRODUCT_TYPE = '2'
                               ) B
                         WHERE A.SA_ID = #{saId}
                           AND A.BUY_DATE = #{buyingDate}
                           AND NVL(A.REFUND_YN, 'N') <![CDATA[<>]]> 'P'
                           AND NVL(regexp_substr(replace(replace(A.ERROR_MSG, '||', '|Z|'), '|', '^'), '[^^]+', 1,4,'i'), 'N') != 'X'
                           AND A.PRODUCT_ID = B.PRODUCT_ID
                       ) X 
                 WHERE C_EXPIRED_MM <![CDATA[>]]> 0
               )	       
	</select>
	
	
	
	<!--  이어보기 시간 조회 -->
	<select id="getLinkTime" resultType="String" >
		SELECT /*+ index(A IDX_PT_VO_SET_TIME_02_PTT) */  TO_NUMBER(A.link_time)
		  FROM PT_VO_SET_TIME_PTT A
		 WHERE A.sa_id =  #{shareSaId}
		   AND A.adi_album_id = #{albumId}
		   AND A.P_IDX_SA = #{modIdxSa}
		   AND A.nscn_cust_no = #{nscnCustNo}
	</select>
	
	<select id="getLinkTimeN" resultType="String" >
		SELECT /*+ index(A IDX_PT_VO_SET_TIME_02_PTT_N) */  TO_NUMBER(A.link_time)
		  FROM PT_VO_SET_TIME_PTT_NSC A
		 WHERE A.sa_id =  #{shareSaId}
		   AND A.adi_album_id = #{albumId}
		   AND A.P_IDX_SA = #{modIdxSa}
		   AND A.nscn_cust_no = #{nscnCustNo}
	</select>
	
	

	<!-- 워터마크 존재여부 조회 -->	
	<select id="getWatermarkChk" resultType="String" >
		SELECT 'Y' AS CAT_WATERMARK 
		  FROM DUAL 
		 WHERE EXISTS (
		        SELECT watermark_yn                                                                     
                  FROM PT_VO_CATEGORY                                                                   
                 WHERE watermark_yn = 'Y'                                                               
                 START WITH category_id in ( 
			  SELECT * FROM ( 
				SELECT category_id 
                  FROM PT_VO_CATEGORY_MAP 
                 WHERE contents_id = #{albumId} 
                 union all 
                SELECT category_id 
                  FROM PT_VO_CATEGORY_MAP 
                 WHERE contents_id = (SELECT distinct NSC_ALBUM_ID 
                                    FROM IMCSUSER.PT_LA_PACKAGE_ASSET   
                                   WHERE NSC_ALBUM_ID =  #{albumId}    
                                 )                                      
                                     ) V1 
              )                                                            
               CONNECT BY PRIOR parent_category_id = category_id  
		  )
	</select>
	
	
	
	<!-- 자막정보 조회 -->
	<select id="getSmiInfo" resultType="AuthorizeNViewResponseVO">
		SELECT 1 AS CAP_YN,
		       CASE when  C.SMI_YN = 'Y' THEN E.SMI_FILE_NAME else '' END CAP_FILE_NAME,
		       E.SMI_FILE_SIZE AS CAP_FILE_SIZE, C.SMI_YN, C.SMI_YN AS SMI_IMP_YN,
		       D.WATERMARK_YN, E.SMI_LANGUAGE, C.MYCUT_YN,
		       G.CP_PROPERTY AS CP_PROPERTY, H.CP_PROPERTY AS CP_PROPERTY_UFX,
		       NVL(C.CONTS_360,'N') AS CONTS_360, NVL(B.EXT_META_GB,'0000') AS EXT_META_GB,
		       E.SMI_FILE_NAME_ENC AS CAP_FILE_NAME2, E.SMI_FILE_SIZE_ENC AS CAP_FILE_SIZE2, E.SMI_ENCRYPT_YN AS CAP_FILE_ENCRYPT_YN,
		       NVL(E.SMI_REPEAT_YN, 'N') AS CAP_FILE_LANGUAGE_YN, B.OPENING_END_TIME AS OPENING_END_TIME, B.ENDING_BGN_TIME AS ENDING_BGN_TIME, DECODE(A.VOD_TYPE, 'D', 'Y', 'N') AS REPLAY_4D_YN, MAX(D.CONTENT_VALUE) AS REPLAY_4D_CONT_VALUE,
				DECODE(B.MUSIC_CONT_TYPE, 'C', 'Y', 'B', 'Y', 'D', 'Y', 'T', 'Y', 'N') AS MUSIC_YN, case when B.VR_TYPE is not null and B.VR_TYPE != 'V3S' then 'Y' else 'N' end AS VR_YN,
				MAX(case when SUBSTR(D.ASSET_ID,16,2) = 'M2' then D.CONTENT_FILESIZE  end) AS CONTENT_FILESIZE 
		  FROM IMCSUSER.PT_LA_ALBUM_INFO A,
				IMCSUSER.PT_LA_ALBUM_SUB B,
				IMCSUSER.PT_LA_ALBUM_PLATFORM C,
				IMCSUSER.PT_LA_ASSET_INFO D,
				IMCSUSER.PT_LA_ALBUM_SMI E,
		       IMCSUSER.PT_CD_CP_MST G, IMCSUSER.PT_CD_CP_MST H
		 WHERE A.ALBUM_ID = #{albumId}
		   AND A.ALBUM_ID = B.ALBUM_ID
		   AND B.ALBUM_ID = C.ALBUM_ID
		   AND C.ALBUM_ID = D.ALBUM_ID
		   AND D.ALBUM_ID = E.ALBUM_ID
		   AND C.SCREEN_TYPE = 'N'
		   AND C.SCREEN_TYPE = D.SCREEN_TYPE
		   AND D.SCREEN_TYPE = E.SCREEN_TYPE
		   AND ( G.CP_ID(+) = C.CP_ID AND H.CP_ID(+) = C.CP_ID_UFLIX )
		 GROUP BY C.SMI_YN, E.SMI_FILE_NAME, E.SMI_FILE_SIZE, D.WATERMARK_YN, E.SMI_LANGUAGE, C.MYCUT_YN, G.CP_PROPERTY,
				   H.CP_PROPERTY, C.CONTS_360, B.EXT_META_GB, E.SMI_FILE_NAME_ENC, E.SMI_FILE_SIZE_ENC, E.SMI_ENCRYPT_YN,
				   E.SMI_REPEAT_YN, B.OPENING_END_TIME, B.ENDING_BGN_TIME, A.VOD_TYPE, B.MUSIC_CONT_TYPE, B.VR_TYPE 
	</select>
	
	
	<!-- 지역 노드 정보 조회 -->
	<select id="getNodeCd" resultType="String">
	   SELECT SUB_NODE_CD AS NODE_CD
		 FROM IMCSUSER.PT_LV_RANGE_IP_INFO 
		WHERE RANGE_IP_CD = #{baseCondi}
		  AND NVL(USE_YN, 'Y') = 'Y'
	</select>
	
	<!-- VOD 서버 조회1 -->
	<select id="getVodServer1" resultType="AuthorizePlayIpVO">
	SELECT DISTINCT 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip1||':80/' end AS SERVER_PLAY_IP1, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip2||':80/' end AS SERVER_PLAY_IP2, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip3||':80/' end AS SERVER_PLAY_IP3, 
	       B.CDN_LOCAL_TYP AS SERVER_TYPE1, B.CDN_NEAR_TYP AS SERVER_TYPE2, B.CDN_CENTER_TYP AS SERVER_TYPE3,                                
	       NVL(B.IPV6_FLAG1,'I') AS SERVER_IPV6_NODE1, NVL(B.IPV6_FLAG2,'I') AS SERVER_IPV6_NODE2, NVL(B.IPV6_FLAG3, 'I') AS SERVER_IPV6_NODE3,
	       B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		   B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3
	    FROM IMCSUSER.PT_LV_NODE_INFO B,                                                       
	       IMCSUSER.PT_LV_RANGE_IP_INFO C                                                      
	 WHERE C.sub_node_cd = #{nodeCd}                                                        
	   AND B.sub_node_cd = C.sub_node_cd 
	</select>
	
	<!-- VOD 서버 조회2 -->
	<select id="getVodServer2"  resultType="AuthorizePlayIpVO">		
	SELECT distinct 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip1||':80/' end AS SERVER_PLAY_IP1, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip2||':80/' end AS SERVER_PLAY_IP2, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip3||':80/' end AS SERVER_PLAY_IP3, 
	       B.CDN_LOCAL_TYP AS SERVER_TYPE1, B.CDN_NEAR_TYP AS SERVER_TYPE2, B.CDN_CENTER_TYP AS SERVER_TYPE3,                                
	       NVL(B.IPV6_FLAG1,'I') AS SERVER_IPV6_NODE1, NVL(B.IPV6_FLAG2,'I') AS SERVER_IPV6_NODE2, NVL(B.IPV6_FLAG3, 'I') AS SERVER_IPV6_NODE3,
	       B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		   B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3				
	   FROM PT_VO_CUSTOM_ID A,                                                                 
	       IMCSUSER.PT_LV_NODE_INFO B,                                                         
	       IMCSUSER.PT_LV_DONG_INFO C                                                          
	 WHERE A.sa_id = #{saId}                                                             
	   AND A.mac_addr = #{stbMac}                                                           
	   AND C.dong_cd = A.hjdong_no                                                             
	   AND B.sub_node_cd = C.nsc_sub_node_cd    
	</select>
	
	<!-- VOD 서버 조회3 -->
	<select id="getVodServer3"  resultType="AuthorizePlayIpVO">		
	SELECT	'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP1, 
          	'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP2, 
          	'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP3, 
          	NVL(E.CONTENT_VALUE, '') AS VOD_FILE_NAME, B.CDN_LOCAL_TYP AS SERVER_TYPE1, B.CDN_NEAR_TYP AS SERVER_TYPE2, B.CDN_CENTER_TYP AS SERVER_TYPE3,																
			NVL(B.IPV6_FLAG1,'I') AS SERVER_IPV6_NODE1, NVL(B.IPV6_FLAG2,'I') AS SERVER_IPV6_NODE2, NVL(B.IPV6_FLAG3, 'I') AS SERVER_IPV6_NODE3,
			B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		    B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3		
       FROM IMCSUSER.PT_LV_NODE_INFO B,                                                     
            IMCSUSER.PT_LV_RANGE_IP_INFO C,                                                 
            IMCSUSER.PT_LA_PACKAGE_ASSET D,                                                 
            IMCSUSER.PT_LA_CONTENT_ASSET E                                                  
      WHERE C.sub_node_cd = #{nodeCd}                                                    
        AND B.sub_node_cd = C.sub_node_cd                                                   
        AND D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID                                             
        AND SUBSTR(D.ADI_PRODUCT_ID,16,2) = #{bitRate}                              
        AND D.NSC_ALBUM_ID = #{albumId}                                           
     	AND ROWNUM = 1	  
	</select>
	
	
	<!-- VOD 서버 조회4 -->
	<select id="getVodServer4"  resultType="AuthorizePlayIpVO">		
	SELECT	'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP1, 
            'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP2, 
            'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP3, 
            NVL(E.CONTENT_VALUE, '') AS VOD_FILE_NAME, B.CDN_LOCAL_TYP AS SERVER_TYPE1, B.CDN_NEAR_TYP AS SERVER_TYPE2, B.CDN_CENTER_TYP AS SERVER_TYPE3,																
			NVL(B.IPV6_FLAG1,'I') AS SERVER_IPV6_NODE1, NVL(B.IPV6_FLAG2,'I') AS SERVER_IPV6_NODE2, NVL(B.IPV6_FLAG3, 'I') AS SERVER_IPV6_NODE3,
			B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		    B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3			
       FROM PT_VO_CUSTOM_ID A,                                                              
            IMCSUSER.PT_LV_NODE_INFO B,                                                     
            IMCSUSER.PT_LV_DONG_INFO C,                                                     
            IMCSUSER.PT_LA_PACKAGE_ASSET D,                                                 
            IMCSUSER.PT_LA_CONTENT_ASSET E                                                  
      WHERE A.sa_id = #{saId}                                                        
        AND A.mac_addr = #{stbMac}                                                 
        AND C.dong_cd = A.hjdong_no                                                         
        AND B.sub_node_cd = C.nsc_sub_node_cd                                               
        AND D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID                                             
        AND SUBSTR(D.ADI_PRODUCT_ID,16,2) = #{bitRate}                                     
        AND D.NSC_ALBUM_ID = #{albumId}                                                
     	AND ROWNUM = 1		
	</select>
	
	<!-- VOD 서버 조회5 -->
	<select id="getVodServer5"  resultType="AuthorizePlayIpVO">		
	SELECT distinct 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip1||':80/' end AS SERVER_PLAY_IP1, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip2||':80/' end AS SERVER_PLAY_IP2, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip3||':80/' end AS SERVER_PLAY_IP3, 
	       B.CDN_LOCAL_TYP , B.CDN_NEAR_TYP , B.CDN_CENTER_TYP,                                 
	       NVL(B.IPV6_FLAG1,'I'), NVL(B.IPV6_FLAG2,'I'), NVL(B.IPV6_FLAG3, 'I'),
	       B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		   B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3
	  FROM IMCSUSER.PT_LV_NODE_INFO B,                                                          
	       IMCSUSER.PT_LV_BASE_INFO C                                                           
  	 WHERE C.BASE_CD = '1234567890'                                                             
	   AND B.sub_node_cd = C.nsc_sub_node_cd 
	</select>
	
	<!-- VOD 서버 조회6 -->
	<select id="getVodServer6"  resultType="AuthorizePlayIpVO">		
	SELECT 'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP1, 
           'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP2, 
           'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP3, 
           NVL(E.CONTENT_VALUE, ''),                               
           B.CDN_LOCAL_TYP , B.CDN_NEAR_TYP , B.CDN_CENTER_TYP,    										
		   NVL(B.IPV6_FLAG1,'I'), NVL(B.IPV6_FLAG2,'I'), NVL(B.IPV6_FLAG3, 'I'),
		   B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		   B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3
      FROM IMCSUSER.PT_LV_NODE_INFO B,                             
           IMCSUSER.PT_LV_BASE_INFO C,                             
           IMCSUSER.PT_LA_PACKAGE_ASSET D,                         
           IMCSUSER.PT_LA_CONTENT_ASSET E                          
     WHERE C.BASE_CD = '1234567890'                                
       AND B.sub_node_cd = C.nsc_sub_node_cd                       
       AND D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID                     
       AND SUBSTR(D.ADI_PRODUCT_ID,16,2) = #{bitRate}             
       AND D.NSC_ALBUM_ID = #{albumId}                            
       AND ROWNUM = 1						
	</select>
	
	<!-- VOD 서버 조회7 -->
	<select id="getVodServer7"  resultType="AuthorizePlayIpVO">		
	SELECT distinct 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip1||':80/' end AS SERVER_PLAY_IP1, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip2||':80/' end AS SERVER_PLAY_IP2, 
	       case when #{replay4dYn} = 'N' then 'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' else 'rtsp://'||B.stb_play_ip3||':80/' end AS SERVER_PLAY_IP3, 
	       B.CDN_LOCAL_TYP , B.CDN_NEAR_TYP , B.CDN_CENTER_TYP,                                
	       NVL(B.IPV6_FLAG1,'I'), NVL(B.IPV6_FLAG2,'I'), NVL(B.IPV6_FLAG3, 'I'),
	       B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		   B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3
	  FROM IMCSUSER.PT_LV_DONG_INFO A ,                                                        
	       IMCSUSER.PT_LV_NODE_INFO B                                                          
	 WHERE A.DONG_CD = '1234567890'                                                            
	   and A.NSC_SUB_NODE_CD = B.SUB_NODE_CD						
	</select>
	
	<!-- VOD 서버 조회8 -->
	<select id="getVodServer8"  resultType="AuthorizePlayIpVO">		
	SELECT  'http://'||B.stb_play_ip1||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP1, 
            'http://'||B.stb_play_ip2||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP2, 
            'http://'||B.stb_play_ip3||case when #{nodeGroup} = 'Z' then '' else ':' || b.SUB_NODE_PORT1 end || '/' AS SERVER_PLAY_IP3, 
            NVL(E.CONTENT_VALUE, ''), B.CDN_LOCAL_TYP , B.CDN_NEAR_TYP , B.CDN_CENTER_TYP,  																
			NVL(B.IPV6_FLAG1,'I'), NVL(B.IPV6_FLAG2,'I'), NVL(B.IPV6_FLAG3, 'I'),
			B.IPV6_PLAY_IP1 AS SERVER_IPV6_PLAY_IP1, B.IPV6_PLAY_IP2 AS SERVER_IPV6_PLAY_IP2, B.IPV6_PLAY_IP3 AS SERVER_IPV6_PLAY_IP3, B.SUB_NODE_PORT1 AS SERVER_IPV6_PORT,
		    B.CDN_LOCAL_TYP AS SERVER_IPV6_TYPE1, B.CDN_NEAR_TYP AS SERVER_IPV6_TYPE2, B.CDN_CENTER_TYP AS SERVER_IPV6_TYPE3
       FROM IMCSUSER.PT_LV_DONG_INFO A ,                                                    
            IMCSUSER.PT_LV_NODE_INFO B,                                                     
            IMCSUSER.PT_LA_PACKAGE_ASSET D,                                                 
            IMCSUSER.PT_LA_CONTENT_ASSET E                                                  
      WHERE A.DONG_CD = '1234567890'                                                        
        and A.NSC_SUB_NODE_CD = B.SUB_NODE_CD                                               
        AND D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID                                             
        AND SUBSTR(D.ADI_PRODUCT_ID,16,2) = #{bitRate}                                  
        AND D.NSC_ALBUM_ID = #{albumId}                                                 
     	AND ROWNUM = 1																
	</select>
	
	<!-- 시청이력 저장 -->
	<insert id="insertWatchHis" parameterType="AuthorizeNViewRequestVO">
	INSERT INTO PT_VO_WATCH_HISTORY_NSC (
	SA_ID, 
	MAC_ADDR, 
	BUY_DATE, 
	PRODUCT_ID, 
	CONTENTS_ID, 
	WATCH_FDATE, 
	WATCH_EDATE, 
	PATTERN_TYPE, 
	REQUEST_TYPE, 
	CHA_NO, 
	APPL_TYPE, 
	VIEW_TYPE, 
	PVS_TRANS_YN, 
	UFLIX_YN, 
	P_IDX_SA, 
	P_IDX_DAY, 
	ASSET_ID
	) 
	VALUES (
	#{saId}, 
	#{stbMac}, 
	#{buyingDate}, 
	#{productId}, 
	#{albumId}, 
	TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), 
	TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), 
	'4', 
	#{reqType}, 
	#{chaNo}, 
	#{applType}, 
	#{viewType}, 
	'Y', 
	#{fxType}, 
	MOD(#{pIdxSa}, 33), 
	SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDD'), 7, 2), 
	#{kidsGb}
	)
	</insert> 
	
	<!-- 시청이력 저장 - 엔스크린 -->
	<insert id="insertWatchHisNScreen" parameterType="AuthorizeNViewRequestVO">
<!-- 		INSERT INTO PT_VO_WATCH_HISTORY (
			sa_id
			, mac_addr
			, buy_date
			, product_id
			, contents_id
			, watch_fdate
			, watch_edate
			, pattern_type
			, request_type
			, cha_no
			, appl_type
			, PVS_TRANS_YN
			, UFLIX_YN
			, p_idx_sa
			, p_idx_day
			, asset_id
		) VALUES (
			#{nSaId}
			, #{nStbMac}
			
			<choose>
				<when test='nBuyDate.equals("N")'>
					, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
				</when>
				<otherwise>
					, #{nBuyDate}
				</otherwise>
			</choose>
			
			, #{productId}
			
			<choose>
				<when test='nBuyDate.equals("N")'>
					, #{assetId}
				</when>
				<otherwise>
					, #{productId}
				</otherwise>
			</choose>
			
			, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			, '4'
			, #{reqType}
			, #{chaNo}
			, #{appType}
			, #{udrTransYn}
			, 'N'
			, MOD(#{pIdxSa}, 33)
			, SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'), 7, 2),
			, #{assetId}
		) -->
		
		INSERT INTO PT_VO_SET_TIME_PTT_NSC(p_idx_sa, p_idx_day, nscn_cust_no, sa_id, adi_album_id, link_time, watch_date)    
        values(mod(#{pIdxSa}, 33),                                                                            			
               substr(TO_CHAR(SYSDATE,'YYYYMMDD'), 7, 2),                                                              
               #{nscnCustNo},			                                                                                        
               #{saId},                                                                                            
               #{albumId},                                                                                            
               '1' ,                                    		                                                        
               TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') )
	</insert> 
	
	<update id="updateWatchHisNScreen" parameterType="AuthorizeNViewRequestVO">
        UPDATE /*+ index(A IDX_PT_VO_SET_TIME_02_PTT_N) */ PT_VO_SET_TIME_PTT_NSC A  
           SET WATCH_DATE = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')					
         WHERE sa_id = #{saId}
           AND adi_album_id = #{albumId}
           AND nscn_cust_no = #{nscnCustNo}													
           AND P_IDX_SA = mod(#{pIdxSa}, 33)	
	</update>

	<!-- PRODUCT ID 조회 -->
	<select id="getProductId" resultType="String">
    SELECT /*+ USE_NL(A B C) */ 
    	   DISTINCT RTRIM(A.product_id) AS PRODUCT_ID
      FROM PT_VO_BUY_NSC A,
                IMCSUSER.PT_LA_ASSET_INFO B,
                IMCSUSER.PT_PD_PACKAGE_DETAIL C
     WHERE A.sa_id = #{saId}
       AND A.mac_addr = #{stbMac}
       AND A.buy_date = #{buyingDate}
       AND B.ALBUM_ID = #{albumId}
       AND A.PRODUCT_ID = CASE WHEN A.PKG_YN = 'Y' THEN C.PRODUCT_ID ELSE B.ALBUM_ID END
       AND C.CONTENTS_ID = B.ASSET_ID
       AND B.SCREEN_TYPE = 'N'
	</select> 
	

	<!-- 구간정보 이미지 조회 -->
	<select id="getThumnailInfo" parameterType="AuthorizeNViewRequestVO" resultMap="mThumnail">
	SELECT A.CONTENT_VALUE, A.SECOND_VALUE, A.POSTER_TYPE
	  FROM IMCSUSER.PT_LA_ALBUM_POSTER A
	 WHERE A.album_id = #{albumId}
	   AND A.screen_type = 'N'
	   AND A.poster_type IN ('Z', 'X')
	   AND A.service_yn = 'Y'
	</select>
	
	
	<!-- 리얼HD 파일명 조회 -->
	<select id="getLiveHevcFile" resultType="String">
	   SELECT NVL(E.CONTENT_VALUE, '') AS LIVE_HEVC_FILE_NAME
		 FROM IMCSUSER.PT_LA_PACKAGE_ASSET D,
		      IMCSUSER.PT_LA_CONTENT_ASSET E
		WHERE D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID
		  AND SUBSTR(D.ADI_PRODUCT_ID,16,2) = 'M9'
		  AND D.NSC_ALBUM_ID = #{albumId}
	</select>
	
	
	<!-- 장르 정보 조회 -->
	<select id="getGenreInfo" parameterType="AuthorizeNViewRequestVO" resultType="GenreInfoVO">
		SELECT DISTINCT GENRE_LARGE, GENRE_MID, GENRE_SMALL, B.SUGGESTED_PRICE
		  FROM IMCSUSER.PT_LA_PACKAGE_ASSET A,
		       IMCSUSER.PT_LA_TITLE_ASSET B
		 WHERE B.ADI_PRODUCT_ID = A.ADI_PRODUCT_ID
		   AND A.NSC_ALBUM_ID = #{albumId}
	</select>
	
	
	<!-- 구간정보 이미지 조회 -->
	<select id="getFmInfo" parameterType="AuthorizeNViewRequestVO" resultType="FmInfoVO">
	SELECT NVL(N.FM_YN, 'N') AS FM_YN, NVL(N.ADI_PRODUCT_ID, '') AS ADI_PROD_ID
	  FROM IMCSUSER.PT_LA_ALBUM_MST M, (
	    SELECT #{albumId} AS ALBUM_ID,
	             NVL(C.FM_YN, 'N') AS FM_YN,
	             A.ADI_PRODUCT_ID
	       FROM IMCSUSER.PT_LA_PACKAGE_ASSET A,
	            IMCSUSER.PT_LB_BRO_MATERIAL B,
	            IMCSUSER.PT_LA_CONTENT_ASSET C
	      WHERE A.ADI_PRODUCT_ID = C.ADI_PRODUCT_ID
	        AND B.ASSET_ID = C.ASSET_ID
	        AND A.NSC_ALBUM_ID = #{albumId}
	        AND SUBSTR(C.ASSET_ID, 16, 2) = 'M2'
	        AND (NVL(B.QD_YN, 'N') = 'N' OR (NVL(B.QD_YN, 'N') = 'Y' AND NVL(B.QD_FLAG, 'N') = '2'))
	        AND NVL(C.FM_YN, 'N') = 'Y' ) N
	 WHERE M.ADI_ALBUM_ID = #{albumId}
	   AND M.ADI_ALBUM_ID = N.ALBUM_ID (+)
	</select>
	
	
	<!-- HEVC_YN을 체크하기 위하여 ASSET_ID 조회 -->
	<select id="getAssetId" parameterType="AuthorizeNViewRequestVO" resultType="String">
		SELECT ASSET_ID
		  FROM IMCSUSER.PT_LA_PACKAGE_ASSET
		 WHERE NSC_ALBUM_ID = #{albumId}
		   AND SUBSTR(ADI_PRODUCT_ID, 16, 2) IN ('MA', 'M9')
	</select>
	
	
	<!-- 발급 가능 쿠폰 리스트 조회 -->
	<select id="getCpnPossibleList" parameterType="AuthorizeNViewRequestVO" resultType="ComCpnVO">
		SELECT SMARTUX.F_GET_CPN_COND_POSSIBLE_LIST(#{catId}, #{albumId}, #{screenType_cpnCondPossible}, #{genreInfo}, '0', 
		        DECODE(#{prodType}, '1', 'Y', 'N'), 'N', '2' , #{saId}) AS CPN_INFO,
		       REPLACE(SMARTUX.F_GET_CPN_COND_POSSIBLE_LIST(#{catId}, #{albumId}, #{screenType_cpnCondPossible}, #{genreInfo}, '0', 
		        DECODE(#{prodType}, '1', 'Y', 'N'), 'N', '2' , #{saId}), '\b', '|') AS CPN_INS_INFO 
		  FROM DUAL
	</select>
	
	<!-- 쿠폰 존재 여부 체크 -->
	<select id="getCpnChk" parameterType="AuthorizeNViewRequestVO" resultType="Integer">
		SELECT COUNT(*) AS CPN_CNT
		  FROM SMARTUX.PT_CPM_COUPON_BOX_ACTION 
		 WHERE SA_ID = #{saId}
		   AND CPEVT_ID = #{cpnId}
		   AND ALBUM_ID = #{albumId}
		   AND PT_SAID = MOD(#{pIdxSa}, 33)
		   AND SYSTEM_GB = #{systemGb_cpnCondPossible}
	</select>
	
	
	<!-- 쿠폰 정보 입력 -->
	<insert id="insCpnInfo" parameterType="AuthorizeNViewRequestVO">
		INSERT INTO SMARTUX.PT_CPM_COUPON_BOX_ACTION (PT_SAID, PT_DAY, ORD_NO, CPEVT_ID, SA_ID, 
		        SYSTEM_GB, CPN_NO, BUY_AUTH_NO, REG_DATE, STATUS, RETRY_CNT, BUY_TYPE, ALBUM_ID) 
		VALUES (MOD(#{pIdxSa}, 33), SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDD'), 7, 2),
		        SMARTUX.SEQ_PT_CPM_COUPON_BOX_ACTION.NEXTVAL, #{cpnId}, #{saId}, #{systemGb_cpnCondPossible}, '' , 
		        #{saId}||#{buyingDate}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), 'N', '0', '2', #{albumId})
	</insert> 
	
	
	<!-- 스탬프 리스트 조회 -->
	<select id="getStmPossibleList" parameterType="AuthorizeNViewRequestVO" resultType="ComCpnVO">
	  	SELECT SMARTUX.F_GET_STM_COND_POSSIBLE(#{saId}, #{catId}, #{albumId}, #{screenType}, #{genreInfo}, '0', 
		        DECODE(#{prodType}, '1', 'Y', 'N'), 'N', '2') AS STM_INFO,
		       REPLACE(SMARTUX.F_GET_STM_COND_POSSIBLE(#{saId}, #{catId}, #{albumId}, #{screenType}, #{genreInfo}, '0', 
		        DECODE(#{prodType}, '1', 'Y', 'N'), 'N', '2' ), '\b', '|') AS STM_INS_INFO 
		  FROM DUAL
	</select>
	
	<!-- 스탬프 존재 여부 체크 -->
	<select id="getStmChk" parameterType="AuthorizeNViewRequestVO" resultType="Integer">
		SELECT COUNT(*) AS CPN_CNT
		  FROM SMARTUX.PT_CPM_STAMP_BOX_ACTION 
		 WHERE SA_ID = #{saId}
		   AND CPEVT_ID = #{cpnId}
		   AND ALBUM_ID = #{albumId}
		   AND PT_SAID = MOD(#{pIdxSa}, 33)
	</select>
	
	<!-- 스탬프 정보 입력 -->
	<insert id="insStmInfo" parameterType="AuthorizeNViewRequestVO">
		INSERT INTO SMARTUX.PT_CPM_STAMP_BOX_ACTION (PT_SAID, PT_DAY, ORD_NO, STAMP_ID, SA_ID, 
		        SYSTEM_GB, BUY_AUTH_NO, REG_DATE, STATUS, RETRY_CNT, ALBUM_ID, BUY_TYPE) 
		VALUES (MOD(#{pIdxSa}, 33), SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDD'), 7, 2),
		        SMARTUX.SEQ_PT_CPM_STAMP_BOX_ACTION.NEXTVAL, #{cpnId}, #{saId}, #{systemGb},  
		        #{saId}||#{buyingDate}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), 'N', '0', #{albumId}, '2')
	</insert> 


	<!-- 예약구매 컨텐츠 최초 시청시, 구매정보 갱신 -->
	<update id="uptBuyContsExDate" parameterType="AuthorizeNViewRequestVO">
		UPDATE PT_VO_BUY_NSC
		   SET EXPIRED_DATE = #{expiredDateUp}
		 WHERE SA_ID        = #{saId}
		   AND MAC_ADDR     = #{stbMac}
		   AND BUY_DATE     = #{buyingDate}
		   AND PRODUCT_ID   = #{albumId}
		   AND NVL(REFUND_YN,'N') = 'R'
	</update> 

	
	<!-- 사용가능 쿠폰 리스트보 조회 -->
	<select id="getUseCpnPossibleList" parameterType="AuthorizeNViewRequestVO" resultType="ComCpnVO">
		SELECT SMARTUX.F_GET_CPN_USE_POSSIBLE_LIST(#{saId}, #{catId}, #{albumId}, #{screenType}, #{genreInfo}, '0', 
		        DECODE(#{prodType}, '1', 'Y', 'N'), 'N') AS USE_CPN_INFO 
		  FROM DUAL
	</select>
	
	<!-- 데이터 프리 구매 여부 조회 -->
	<select id="getBuyDataFreeInfo" parameterType="AuthorizeNViewRequestVO" resultType="String">
		SELECT TRIM(BUY_AMT) AS DATAFREE_PRICE
		        FROM PT_VO_BUY_NSC
         WHERE SA_ID        = #{saId}
		   AND MAC_ADDR     = #{stbMac}
		   AND EXPIRED_DATE  <![CDATA[>=]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		   AND PRODUCT_ID   = '${albumId}_D'
		   AND NVL(REFUND_YN,'N') <![CDATA[ <> ]]> 'P'
		    AND NVL(regexp_substr(replace(replace(ERROR_MSG, '||', '|Z|'), '|', '^'), '[^^]+', 1,4,'i'), 'N') != 'X'
	</select>
	
	<!-- 노드 정보 조회 (와이파이) -->
	<select id="getNodeCdLoadBalancing1" resultType="String">
		SELECT SUB_NODE_CD AS NODE_CD
		 FROM IMCSUSER.PT_LV_RANGE_IP_INFO 
		WHERE RANGE_IP_CD LIKE #{tmpNodeGroup} || '%'
		  AND LENGTH(RANGE_IP_CD) >= 2
		  AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3
		  AND NVL(USE_YN, 'Y') = 'Y'
		ORDER BY RANGE_IP_CD
	</select>
	
	<!-- 노드 정보 조회 (와이파이) -->
	<select id="getNodeCdLoadBalancing2" resultType="String">
		SELECT SUB_NODE_CD AS NODE_CD
		 FROM IMCSUSER.PT_LV_RANGE_IP_INFO 
		WHERE RANGE_IP_CD LIKE #{tmpNodeGroup} || '%'
		  AND LENGTH(RANGE_IP_CD) >= 3
		  AND LENGTH(RANGE_IP_CD)  <![CDATA[ <= ]]> 4
		  AND NVL(USE_YN, 'Y') = 'Y'
		ORDER BY RANGE_IP_CD
	</select>
	
	<!-- 시즌여부(HDTV) 조회 -->
	<select id="getSeasonInfo" resultType="java.lang.String">
		<![CDATA[
			SELECT distinct 1
			  FROM IMCSUSER.PT_LA_SEASON_SERIES_MAP A,
			       IMCSUSER.PT_LA_ALBUM_GROUP B,
			       IMCSUSER.PT_LA_ALBUM_RELATION C,
			       PT_VO_CATEGORY D
			WHERE A.series_id_imcs = B.album_group_id
			  AND NVL(A.season_type, 'R') = 'R'
			  AND B.group_type = 'S'
			  AND B.album_group_id = C.album_group_id
			  AND B.group_type = C.group_type
			  AND C.album_id = #{albumId}
			  AND A.series_id_imcs = D.series_id
			  AND D.category_gb = 'NSC'
			  AND NVL(d.test_sbc,'N') = 'N'
		]]>
	</select>
	
	<!-- 암호키 조회 -->
	<select id="getEnctyptKey" resultType="java.lang.String">
		<![CDATA[
			SELECT TRIM(VALUE)						
			 FROM PT_VO_ENCRYPT
			WHERE API_NAME='authorizeNView'
		]]>
	</select>
	
	<!-- 엔스크린 가입여부 확인 -->
	<select id="getNScreenPairingChk" parameterType="AuthorizeNViewRequestVO" resultType="java.lang.String">
		SELECT 1
		FROM PT_VO_SBC_PAIRING_TBL
		WHERE STB_SA_ID = #{nSaId}
		AND M_SA_ID = #{saId}
		AND M_MAC = #{stbMac}
		AND FLAG = 'Y'
	</select>
	
	<!-- 엔스크린(NSCREEN) 구매 여부 체크 -->
	<select id="getNScreenBuyChk" parameterType="AuthorizeNViewRequestVO" resultMap="nScreenBuyChk">
		SELECT
			COUNT(*) AS data_chk
			, MAX(asset_id) AS product_id
		FROM (SELECT C.asset_id
				FROM PT_VO_BUY A,
					( select asset_id
						from imcsuser.pt_la_package_asset
						where adi_album_id = #{albumId}
						and album_type IN ('HD', 'SH')
					) C
				WHERE A.sa_id = #{nSaId}
				AND A.buy_date = #{nBuyDate}
				AND A.product_id LIKE SUBSTR(C.asset_id, 1, 17) || '%'
				AND A.expired_date <![CDATA[ > ]]> to_char(sysdate, 'yyyymmddhh24miss')
				AND NVL(regexp_substr(replace(replace(A.ERROR_MSG, '||', '|Z|'), '|', '^'), '[^^]+', 1,4,'i'), 'N') != 'X'
			UNION
				SELECT Z.asset_id
				FROM PT_VO_BUY A,
					(
						SELECT /*+ USE_NL(C D G) */ G.product_id, C.asset_id, NVl(G.pre_sale_yn, 'N') pre_sale_yn,
							case when Trim(G.close_date) is null                                      
										then TO_CHAR(sysdate + 1, 'yyyymmddhh24miss')                        
										else TO_CHAR(TO_DATE(SUBSTR(G.close_date, 1, 12), 'yyyymmddhh24mi')  
															 + to_number(G.expired_date), 'yyyymmddhh24mi')  
															 || substr(G.close_date, 13, 2) end expired_date 
						FROM IMCSUSER.PT_PD_PACKAGE_DETAIL D,
							IMCSUSER.PT_PD_PACKAGE G,
							( select asset_id
								from imcsuser.pt_la_package_asset
								where adi_album_id = #{albumId}
								and album_type IN ('HD', 'SH')
							) C
						WHERE D.contents_id LIKE SUBSTR(C.asset_id, 1, 17) || '%'
						AND D.product_id = G.product_id
						AND G.product_type = '2'
					)Z
				WHERE A.sa_id = #{nSaId}
				AND A.buy_date = #{nBuyDate}
				AND ((A.expired_date <![CDATA[ > ]]> to_char(sysdate, 'yyyymmddhh24miss') ) or (A.expired_date = '0' AND Z.expired_date <![CDATA[ > ]]> to_char(sysdate, 'yyyymmddhh24miss'))) 
	            AND NVL(regexp_substr(replace(replace(A.ERROR_MSG, '||', '|Z|'), '|', '^'), '[^^]+', 1,4,'i'), 'N') != 'X'
	            AND A.product_id = Z.product_id
			) X
	</select>
	
	<!-- 엔스크린(NSCREEN) - 가입자 가입상품 정보 -->
	<select id="getNScreenProductCdList" parameterType="AuthorizeNViewRequestVO" resultType="String">
		SELECT
			productcd
		FROM PT_VO_CUSTOM_PRODUCT
		WHERE sa_id = #{nSaId}
		AND mac_addr = #{nStbMac}
	</select>
	
	<!-- 엔스크린(NSCREEN) - 앨범 상품 정보 -->
	<select id="getNScreenAlbumProducInfotList" parameterType="AuthorizeNViewRequestVO" resultMap="albumProductInfo">
		SELECT
			CASE WHEN X.PRODUCT_TYPE = '1' THEN '' ELSE Y.P_PRODUCT_ID END AS P_PRODUCT_ID
			, X.PRODUCT_ID
			, MIN(X.CONTENTS_ID) AS CONTENTS_ID
		FROM
		(
			SELECT
				C.PRODUCT_ID, B.CONTENTS_ID, C.PRODUCT_TYPE, C.UFLIX_PROD_YN, 
				(SELECT COM_CD FROM IMCSUSER.PT_CD_COM_CD WHERE GRP_ID = 'UDRPRODORD' AND MIN_VALUE = 'I' AND COM_NAME = C.PRODUCT_ID) AS PROD_ORD
			FROM IMCSUSER.PT_LA_PACKAGE_ASSET A,
				IMCSUSER.PT_PD_PACKAGE_DETAIL B,
				IMCSUSER.PT_PD_PACKAGE C
			WHERE A.ADI_ALBUM_ID = #{albumId}
			AND A.ALBUM_TYPE IN ('HD','SH')
			AND A.ASSET_ID = B.CONTENTS_ID
			AND C.PRODUCT_ID = B.PRODUCT_ID
			AND C.PRODUCT_TYPE IN ('1', '3')
		) X,
		IMCSUSER.PT_PD_PACKAGE_RELATION Y  
		WHERE X.PRODUCT_ID = Y.PRODUCT_ID(+)
		GROUP BY CASE WHEN X.PRODUCT_TYPE = '1' THEN '' ELSE Y.P_PRODUCT_ID END, X.PRODUCT_ID, X.PRODUCT_TYPE, X.UFLIX_PROD_YN, X.prod_ord 
		ORDER BY X.PRODUCT_TYPE, to_number(nvl(X.prod_ord, '999')), DECODE(nvl(X.UFLIX_PROD_YN,'N'), #{uflixYn}, 0, 1)
	</select>
	
	<!-- 오늘날짜 시간 조회 -->
	<select id="getSysdateInfo" resultMap="nSysdateInfo" >
			SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') SYSDATE_CURRENT, TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMMDD') SYSDATE_1YEARAGO, TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') AS WATCH_DATE FROM DUAL
	</select>	
	
	<!-- // 2018.08.03 - 시청UDR 유/무료 설정 프로젝트로 아래 로직 추가. 엔스크린 구매연동으로 시청 + 가입권한으로 볼 경우에만 수행한다. -->
	<select id="getNScreenWatchSubscriptionInfo" parameterType="AuthorizeNViewRequestVO" resultMap="nWatchSubscriptionInfo">
	  SELECT terr_type, ago_date
	    FROM
	  (
	 	SELECT '1' as terr_type, TO_CHAR(ADD_MONTHS(SYSDATE,-12*TO_NUMBER(PPV_PERIOD)),'YYYYMMDD') as ago_date
	 	  FROM IMCSUSER.PT_CD_FREE_PERIOD
	 	 WHERE GENRE_NM = #{nscreenGenreSmall}
	 	   AND GENRE_NM NOT IN (SELECT COM_NAME FROM IMCSUSER.PT_CD_COM_CD WHERE GRP_ID = 'CJGENRE' AND MIN_VALUE = '1')
	 	   AND GUBUN = 'IPTV'
	 	   AND TRIM(NVL(PPV_PERIOD, '')) IS NOT NULL
	 	   AND ROWNUM = 1
	  	UNION
	 	SELECT '2' as terr_type, TO_CHAR(ADD_MONTHS(SYSDATE,-12*TO_NUMBER(PPV_PERIOD)),'YYYYMMDD') as ago_date
	 	  FROM IMCSUSER.PT_CD_FREE_PERIOD A,
	 		   IMCSUSER.PT_CD_COM_CD B
	 	 WHERE A.GENRE_NM = #{nscreenGenreSmall}
	 	   AND A.GENRE_NM = B.COM_NAME
	 	   AND B.GRP_ID = 'CJGENRE'
	 	   AND B.MIN_VALUE = '1'
	 	   AND A.GUBUN = 'IPTV'
	 	   AND TRIM(NVL(A.PPV_PERIOD, '')) IS NOT NULL
	 	   AND ROWNUM = 1
	  	ORDER BY ago_date
	  )
	  WHERE rownum = 1
	</select>
	
	<select id="getNScreenAssetInfo" parameterType="AuthorizeNViewRequestVO" resultMap="nscreenAssetInfo">
	SELECT DISTINCT B.GENRE_SMALL, D.SUGGESTED_PRICE,
	       DECODE(C.TERR_YN, '1', 'Y', 'N') as TERR_YN, C.TERR_PERIOD,
	       SUBSTR(C.TERR_ED_DATE, 1, 8) as TERR_ED_DATE, A.ONAIR_DATE, NVL(C.PREVIEW_PERIOD,'Y') AS PREVIEW_PERIOD, C.cp_id,
	       D.ASSET_NAME, B.RATING_CD, B.RUN_TIME, C.CP_ID_UFLIX, A.SERIES_NO
	   FROM IMCSUSER.PT_LA_ALBUM_INFO A,
	        IMCSUSER.PT_LA_ALBUM_SUB B,
	        IMCSUSER.PT_LA_ALBUM_PLATFORM C,
	        IMCSUSER.PT_LA_ASSET_INFO D
	  WHERE D.ASSET_ID = #{assetId}
	    AND D.ALBUM_ID = C.ALBUM_ID
	    AND C.ALBUM_ID = B.ALBUM_ID
	    AND B.ALBUM_ID = A.ALBUM_ID
	    AND D.SCREEN_TYPE = 'I'
	    AND D.SCREEN_TYPE = C.SCREEN_TYPE
	</select>
	
	<select id="getVodProfile" parameterType="AuthorizeNViewRequestVO" resultType="M3u8AWSProfileVO">
	SELECT /*+ INDEX(A PT_LA_M3U8_INFO_IDX01) */
	       A.M3U8_TYPE, A.M3U8_FILE_1 AS CASTIS_M3U8, A.M3U8_FILE_2 AS ONNURI_M3U8, NVL(A.NODE_GROUP,'N') AS NODE_GROUP
	  FROM IMCSUSER.PT_LA_M3U8_INFO A
	 WHERE A.M3U8_ID = #{albumId}
	   AND NVL(A.service_yn, 'Y') = 'Y'	
	</select>
	
	<select id="getVodProfileAWS" parameterType="AuthorizeNViewRequestVO" resultType="M3u8AWSProfileVO">
	SELECT /*+ LEADING(A B C) USE_NL(A B C) INDEX(A PT_LA_M3U8_INFO_IDX01) */
           A.M3U8_TYPE, max(A.M3U8_FILE_1) AS CASTIS_M3U8, max(A.M3U8_FILE_2) AS ONNURI_M3U8, max(NVL(A.NODE_GROUP,'N')) AS NODE_GROUP, 
           max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then content_filename1 else '' end) AWS_FILENAME1,
           max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then content_filename2 else '' end) AWS_FILENAME2,
           max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then content_filename3 else '' end) AWS_FILENAME3,
           max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then service_url1 else '' end) AWS_SERVER_PLAY_IP1,           
           max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then service_url2 else '' end) AWS_SERVER_PLAY_IP2,
           max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then service_url3 else '' end) AWS_SERVER_PLAY_IP3,
           max(case when SUBSTR(C.DST_STATUS, 1, 2) = '11' then 'A' else case when SUBSTR(C.DST_STATUS, 1, 2) = '01' then 'W' else case when SUBSTR(C.DST_STATUS, 1, 2) = '10' then 'L' else '0' end end end) as distr_flag,
           max(NVL(A.service_yn, 'Y')) as serviceYn, max(case when SUBSTR(C.DST_STATUS, 2, 1) = '1' then 'Y' else 'N' end) as awsServiceYn  
      FROM IMCSUSER.PT_LA_M3U8_INFO A,
             IMCSUSER.PT_LA_ASSET_INFO B,
             IMCSUSER.PT_LV_ASSET_DISTR C
     WHERE A.M3U8_ID = #{albumId}
       AND A.M3U8_ID = B.ALBUM_ID
       AND A.M3U8_TYPE = C.M3U8_TYPE(+)
       AND b.screen_type = 'N'
       AND C.M3U8_TYPE(+) is not null
       AND B.ADI_PRODUCT_ID = C.ADI_PRODUCT_ID(+)
       --AND NVL(A.service_yn, 'Y') = 'Y'
   group by A.M3U8_TYPE
	</select>
		
	<select id="getKidsGb" parameterType="AuthorizeNViewRequestVO" resultType="String">
	SELECT DECODE(ACTORS_DISPLAY, 'B', 'B', 'K')
	  FROM PT_VO_CATEGORY
	 WHERE CATEGORY_ID = #{catId}
	   AND CATEGORY_GB = 'NSC'
	   AND NSC_GB = 'KID'
	</select>	
	
	<select id="chkCategory" parameterType="AuthorizeNViewRequestVO" resultType="String">
		SELECT '1' 
		  FROM PT_VO_CATEGORY A ,
               PT_VO_CATEGORY_MAP B
         WHERE A.category_id = B.category_id 
           AND CATEGORY_GB = 'NSC' 
           AND NSC_GB = 'KID' 
           AND ACTORS_DISPLAY = 'H'
           AND B.CONTENTS_ID = #{albumId}
	</select>
	
	
	<select id="kidProductCd" parameterType="AuthorizeNViewRequestVO" resultType="String">
		SELECT
			B.product_cd
		  FROM PVSUSER.XCION_VOD_BOOK_TRF_TBL A,    
		       PVSUSER.PV_PROD_PRODUCT_TBL B, 
		       IMCSUSER.PT_LA_ASSET_INFO C,
		       IMCSUSER.PT_PD_PACKAGE_DETAIL D
		 WHERE A.pvs_sbc_cont_no = #{nSaId}   
		   AND A.tbdv_prod_divs_cd IN ('B', 'C', 'D')    
		   AND A.tbdv_prod_rqst_dt >= TO_CHAR(add_months(sysdate, -24), 'YYYYMMDD')    
		   AND A.tbdv_prod_cd = B.prod_cd    
		   AND B.product_cd = D.product_id    
		   AND C.album_id = #{albumId}
		   AND C.screen_type = 'I'
		   AND C.asset_id = D.contents_id
	</select>
	
	
</mapper> 