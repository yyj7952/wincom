<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">


<!-- property name="LOG_FILE" value="/data/logs/ctis/servicelog/" / -->
<!-- property name="COMMON_LOG_PATTERN" value="%d{yyyy/MM/dd HH:mm:ss.SSS} - %msg%n"/ -->
<!-- property name="TLO_LOG_FILE" value="/data/logs/ctis/tlolog/" / -->
<!-- property name="API_LOG_FILE" value="/tmax/tmax/log/ulog" / -->

<property name="LOG_PATTERN" value="[%d{yyyy/MM/dd HH:mm:ss}] %msg%n"/>
<property name="LOG_FILE" value="/data/log/clog/" />
<property name="API_LOG_FILE" value="/data/log/ulog/" />
<property name="TLO_LOG_FILE" value="/data/log/tlog/" />
<property name="NOSQL_LOG_FILE" value="/data/nosql/nosql_comm/" />
<property name="LOG_PATTERN2" value="%msg%n"/>
<property name="LOG_LEVEL" value="TRACE"/>
  
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${LOG_FILE}${tlolog.index.name}_imcs_api.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}%d{yyyyMM,aux}/${tlolog.index.name}_imcs_api.log.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       			<maxFileSize>500MB</maxFileSize>
      		</timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                ${LOG_PATTERN}
            </pattern>
        </encoder>
    </appender>
  
    
    <!-- Nosql에서 러프한 로그를 남긴다. -->
    <!-- <appender name="nosqlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${NOSQL_LOG_FILE}${tlolog.index.name}_api_common.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${NOSQL_LOG_FILE}%d{yyyyMM,aux}/${tlolog.index.name}_api_common.log.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       			<maxFileSize>500MB</maxFileSize>
      		</timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender> 
    <logger name="lguplus.nosqlcache" level="TRACE">
		<appender-ref ref="nosqlAp" />
	</logger> -->

	
    
    
    <!-- 모든 API에서 러프한 로그를 남긴다. -->
    <appender name="apiCommonAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${LOG_FILE}${tlolog.index.name}_api_common.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}%d{yyyyMM,aux}/${tlolog.index.name}_api_common.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       			<maxFileSize>500MB</maxFileSize>
      		</timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>


	<logger name="org.mybatis" level="ERROR" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	
	<logger name="kr.co.wincom.imcs.api.chkBuyNSPG" level="TRACE" additivity="true">
		<appender-ref ref="STDOUT" />
	</logger>

	<!-- API_LOG -->
    <appender name="API_getNSProdInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSProdInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSProdInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSProdInfo" level="TRACE">
		<appender-ref ref="API_getNSProdInfoAp" />
	</logger>
	<logger name="API_Common_getNSProdInfo" level="TRACE">
		<appender-ref ref="API_getNSProdInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
    <appender name="API_buyNSProductAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}buyNSProduct.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}buyNSProduct.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_buyNSProduct" level="TRACE">
		<appender-ref ref="API_buyNSProductAp" />
	</logger>
	<logger name="API_Common_buyNSProduct" level="TRACE">
		<appender-ref ref="API_buyNSProductAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	    
    <appender name="API_getNSSVODInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSSVODInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSSVODInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSSVODInfo" level="TRACE">
		<appender-ref ref="API_getNSSVODInfoAp" />
	</logger>
	<logger name="API_Common_getNSSVODInfo" level="TRACE">
		<appender-ref ref="API_getNSSVODInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSProdCpInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSProdCpInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSProdCpInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSProdCpInfo" level="TRACE">
		<appender-ref ref="API_getNSProdCpInfoAp" />
	</logger>
	<logger name="API_Common_getNSProdCpInfo" level="TRACE">
		<appender-ref ref="API_getNSProdCpInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSVPSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSVPSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSVPSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSVPSI" level="TRACE">
		<appender-ref ref="API_getNSVPSIAp" />
	</logger>
	<logger name="API_Common_getNSVPSI" level="TRACE">
		<appender-ref ref="API_getNSVPSIAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSVSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSVSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSVSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSVSI" level="TRACE">
		<appender-ref ref="API_getNSVSIAp" />
	</logger>
	<logger name="API_Common_getNSVSI" level="TRACE">
		<appender-ref ref="API_getNSVSIAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmCacheFileAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmCacheFile.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmCacheFile.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_rmCacheFile" level="TRACE">
		<appender-ref ref="API_rmCacheFileAp" />
	</logger>
	<logger name="API_Common_rmCacheFile" level="TRACE">
		<appender-ref ref="API_rmCacheFileAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSMultiViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMultiView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMultiView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSMultiView" level="TRACE">
		<appender-ref ref="API_getNSMultiViewAp" />
	</logger>
	<logger name="API_Common_getNSMultiView" level="TRACE">
		<appender-ref ref="API_getNSMultiViewAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSCHListsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSCHLists.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSCHLists.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSCHLists" level="TRACE">
		<appender-ref ref="API_getNSCHListsAp" />
	</logger>
	<logger name="API_Common_getNSCHLists" level="TRACE">
		<appender-ref ref="API_getNSCHListsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_buyContsCpAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}buyContsCp.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}buyContsCp.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_buyContsCp" level="TRACE">
		<appender-ref ref="API_buyContsCpAp" />
	</logger>
	<logger name="API_Common_buyContsCp" level="TRACE">
		<appender-ref ref="API_buyContsCpAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_buyNSContentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}buyNSContent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}buyNSContent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_buyNSContent" level="TRACE">
		<appender-ref ref="API_buyNSContentAp" />
	</logger>
	<logger name="API_Common_buyNSContent" level="TRACE">
		<appender-ref ref="API_buyNSContentAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSPurchasedAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSPurchased.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSPurchased.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSPurchased" level="TRACE">
		<appender-ref ref="API_getNSPurchasedAp" />
	</logger>
	<logger name="API_Common_getNSPurchased" level="TRACE">
		<appender-ref ref="API_getNSPurchasedAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSRepositedAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSReposited.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSReposited.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSReposited" level="TRACE">
		<appender-ref ref="API_getNSRepositedAp" />
	</logger>
	<logger name="API_Common_getNSReposited" level="TRACE">
		<appender-ref ref="API_getNSRepositedAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_authorizePViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}authorizePView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}authorizePView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_authorizePView" level="TRACE">
		<appender-ref ref="API_authorizePViewAp" />
	</logger>
	<logger name="API_Common_authorizePView" level="TRACE">
		<appender-ref ref="API_authorizePViewAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
          
    <appender name="API_authorizeVViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}authorizeVView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}authorizeVView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_authorizeVView" level="TRACE">
		<appender-ref ref="API_authorizeVViewAp" />
	</logger>
	<logger name="API_Common_authorizeVView" level="TRACE">
		<appender-ref ref="API_authorizeVViewAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
      
    <appender name="API_authorizeNViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}authorizeNView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}authorizeNView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_authorizeNView" level="TRACE">
		<appender-ref ref="API_authorizeNViewAp" />
	</logger>
	<logger name="API_Common_authorizeNView" level="TRACE">
		<appender-ref ref="API_authorizeNViewAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_authorizeNSViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}authorizeNSView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}authorizeNSView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_authorizeNSView" level="TRACE">
		<appender-ref ref="API_authorizeNSViewAp" />
	</logger>
	<logger name="API_Common_authorizeNSView" level="TRACE">
		<appender-ref ref="API_authorizeNSViewAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_setNSPassedTimeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}setNSPassedTime.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}setNSPassedTime.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_setNSPassedTime" level="TRACE">
		<appender-ref ref="API_setNSPassedTimeAp" />
	</logger>
	<logger name="API_Common_setNSPassedTime" level="TRACE">
		<appender-ref ref="API_setNSPassedTimeAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_chkBuyNSPGAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}chkBuyNSPG.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}chkBuyNSPG.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_chkBuyNSPG" level="TRACE">
		<appender-ref ref="API_chkBuyNSPGAp" />
	</logger>
	<logger name="API_Common_chkBuyNSPG" level="TRACE">
		<appender-ref ref="API_chkBuyNSPGAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_chkBuyNSContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}chkBuyNSConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}chkBuyNSConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_chkBuyNSConts" level="TRACE">
		<appender-ref ref="API_chkBuyNSContsAp" />
	</logger>
	<logger name="API_Common_chkBuyNSConts" level="TRACE">
		<appender-ref ref="API_chkBuyNSContsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSMainPromosAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMainPromos.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMainPromos.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSMainPromos" level="TRACE">
		<appender-ref ref="API_getNSMainPromosAp" />
	</logger>
	<logger name="API_Common_getNSMainPromos" level="TRACE">
		<appender-ref ref="API_getNSMainPromosAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_buyNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}buyNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}buyNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_buyNSPresent" level="TRACE">
		<appender-ref ref="API_buyNSPresentAp" />
	</logger>
	<logger name="API_Common_buyNSPresent" level="TRACE">
		<appender-ref ref="API_buyNSPresentAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSPresent" level="TRACE">
		<appender-ref ref="API_getNSPresentAp" />
	</logger>
	<logger name="API_Common_getNSPresent" level="TRACE">
		<appender-ref ref="API_getNSPresentAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_rmNSPresent" level="TRACE">
		<appender-ref ref="API_rmNSPresentAp" />
	</logger>
	<logger name="API_Common_rmNSPresent" level="TRACE">
		<appender-ref ref="API_rmNSPresentAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_useNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}useNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}useNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_useNSPresent" level="TRACE">
		<appender-ref ref="API_useNSPresentAp" />
	</logger>
	<logger name="API_Common_useNSPresent" level="TRACE">
		<appender-ref ref="API_useNSPresentAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSFavorListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSFavorList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSFavorList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSFavorList" level="TRACE">
		<appender-ref ref="API_getNSFavorListAp" />
	</logger>
	<logger name="API_Common_getNSFavorList" level="TRACE">
		<appender-ref ref="API_getNSFavorListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSCHFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSCHFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSCHFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_rmNSCHFavor" level="TRACE">
		<appender-ref ref="API_rmNSCHFavorAp" />
	</logger>
	<logger name="API_Common_rmNSCHFavor" level="TRACE">
		<appender-ref ref="API_rmNSCHFavorAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSWatchHisAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSWatchHis.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSWatchHis.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_rmNSWatchHis" level="TRACE">
		<appender-ref ref="API_rmNSWatchHisAp" />
	</logger>
	<logger name="API_Common_rmNSWatchHis" level="TRACE">
		<appender-ref ref="API_rmNSWatchHisAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSFavoriteAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSFavorite.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSFavorite.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_rmNSFavorite" level="TRACE">
		<appender-ref ref="API_rmNSFavoriteAp" />
	</logger>
	<logger name="API_Common_rmNSFavorite" level="TRACE">
		<appender-ref ref="API_rmNSFavoriteAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSAllCHFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSAllCHFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSAllCHFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_rmNSAllCHFavor" level="TRACE">
		<appender-ref ref="API_rmNSAllCHFavorAp" />
	</logger>
	<logger name="API_Common_rmNSAllCHFavor" level="TRACE">
		<appender-ref ref="API_rmNSAllCHFavorAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSAllWatchHisAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSAllWatchHis.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSAllWatchHis.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_rmNSAllWatchHis" level="TRACE">
		<appender-ref ref="API_rmNSAllWatchHisAp" />
	</logger>
	<logger name="API_Common_rmNSAllWatchHis" level="TRACE">
		<appender-ref ref="API_rmNSAllWatchHisAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSAllFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSAllFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSAllFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_rmNSAllFavor" level="TRACE">
		<appender-ref ref="API_rmNSAllFavorAp" />
	</logger>
	<logger name="API_Common_rmNSAllFavor" level="TRACE">
		<appender-ref ref="API_rmNSAllFavorAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_moveNSFavorIdxAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}moveNSFavorIdx.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}moveNSFavorIdx.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_moveNSFavorIdx" level="TRACE">
		<appender-ref ref="API_moveNSFavorIdxAp" />
	</logger>
	<logger name="API_Common_moveNSFavorIdx" level="TRACE">
		<appender-ref ref="API_moveNSFavorIdxAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_addNSCHFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}addNSCHFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}addNSCHFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_addNSCHFavor" level="TRACE">
		<appender-ref ref="API_addNSCHFavorAp" />
	</logger>
	<logger name="API_Common_addNSCHFavor" level="TRACE">
		<appender-ref ref="API_addNSCHFavorAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_addNSFavoriteAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}addNSFavorite.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}addNSFavorite.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_addNSFavorite" level="TRACE">
		<appender-ref ref="API_addNSFavoriteAp" />
	</logger>
	<logger name="API_Common_addNSFavorite" level="TRACE">
		<appender-ref ref="API_addNSFavoriteAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSMainPageAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMainPage.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMainPage.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSMainPage" level="TRACE">
		<appender-ref ref="API_getNSMainPageAp" />
	</logger>
	<logger name="API_Common_getNSMainPage" level="TRACE">
		<appender-ref ref="API_getNSMainPageAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSGuideVodAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSGuideVod.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSGuideVod.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getNSGuideVod" level="TRACE">
		<appender-ref ref="API_getNSGuideVodAp" />
	</logger>
	<logger name="API_Common_getNSGuideVod" level="TRACE">
		<appender-ref ref="API_getNSGuideVodAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_setNSPointAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}setNSPoint.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}setNSPoint.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_setNSPoint" level="TRACE">
		<appender-ref ref="API_setNSPointAp" />
	</logger>
	<logger name="API_Common_setNSPoint" level="TRACE">
		<appender-ref ref="API_setNSPointAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSCHRankAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSCHRank.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSCHRank.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSCHRank" level="TRACE">
		<appender-ref ref="API_getNSCHRankAp" />
	</logger>
	<logger name="API_Common_getNSCHRank" level="TRACE">
		<appender-ref ref="API_getNSCHRankAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_addNSAlertAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}addNSAlert.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}addNSAlert.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_addNSAlert" level="TRACE">
		<appender-ref ref="API_addNSAlertAp" />
	</logger>
	<logger name="API_Common_addNSAlert" level="TRACE">
		<appender-ref ref="API_addNSAlertAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSAlertAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSAlert.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSAlert.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_rmNSAlert" level="TRACE">
		<appender-ref ref="API_rmNSAlertAp" />
	</logger>
	<logger name="API_Common_rmNSAlert" level="TRACE">
		<appender-ref ref="API_rmNSAlertAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_rmNSAllAlertAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmNSAllAlert.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmNSAllAlert.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_rmNSAllAlert" level="TRACE">
		<appender-ref ref="API_rmNSAllAlertAp" />
	</logger>
	<logger name="API_Common_rmNSAllAlert" level="TRACE">
		<appender-ref ref="API_rmNSAllAlertAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSAlertListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSAlertList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSAlertList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getNSAlertList" level="TRACE">
		<appender-ref ref="API_getNSAlertListAp" />
	</logger>
	<logger name="API_Common_getNSAlertList" level="TRACE">
		<appender-ref ref="API_getNSAlertListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSMakeListsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMakeLists.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMakeLists.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMakeLists" level="TRACE">
		<appender-ref ref="API_getNSMakeListsAp" />
	</logger>
	<logger name="API_Common_getNSMakeLists" level="TRACE">
		<appender-ref ref="API_getNSMakeListsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSSuggestVODAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSSuggestVOD.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSSuggestVOD.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSSuggestVOD" level="TRACE">
		<appender-ref ref="API_getNSSuggestVODAp" />
	</logger>
	<logger name="API_Common_getNSSuggestVOD" level="TRACE">
		<appender-ref ref="API_getNSSuggestVODAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_searchByNSStrAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}searchByNSStr.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}searchByNSStr.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_searchByNSStr" level="TRACE">
		<appender-ref ref="API_searchByNSStrAp" />
	</logger>
	<logger name="API_Common_searchByNSStr" level="TRACE">
		<appender-ref ref="API_searchByNSStrAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSAlbumListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSAlbumList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSAlbumList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getNSAlbumList" level="TRACE">
		<appender-ref ref="API_getNSAlbumListAp" />
	</logger>
	<logger name="API_Common_getNSAlbumList" level="TRACE">
		<appender-ref ref="API_getNSAlbumListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSCHRatingsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSCHRatings.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSCHRatings.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSCHRatings" level="TRACE">
		<appender-ref ref="API_getNSCHRatingsAp" />
	</logger>
	<logger name="API_Common_getNSCHRatings" level="TRACE">
		<appender-ref ref="API_getNSCHRatingsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSVisitDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSVisitDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSVisitDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSVisitDtl" level="TRACE">
		<appender-ref ref="API_getNSVisitDtlAp" />
	</logger>
	<logger name="API_Common_getNSVisitDtl" level="TRACE">
		<appender-ref ref="API_getNSVisitDtlAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSSimilarListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSSimilarList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSSimilarList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSSimilarList" level="TRACE">
		<appender-ref ref="API_getNSSimilarListAp" />
	</logger>
	<logger name="API_Common_getNSSimilarList" level="TRACE">
		<appender-ref ref="API_getNSSimilarListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSContVodAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSContVod.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSContVod.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSContVod" level="TRACE">
		<appender-ref ref="API_getNSContVodAp" />
	</logger>
	<logger name="API_Common_getNSContVod" level="TRACE">
		<appender-ref ref="API_getNSContVodAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSPeriodAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSPeriod.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSPeriod.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSPeriod" level="TRACE">
		<appender-ref ref="API_getNSPeriodAp" />
	</logger>
	<logger name="API_Common_getNSPeriod" level="TRACE">
		<appender-ref ref="API_getNSPeriodAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSVODRankAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSVODRank.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSVODRank.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSVODRank" level="TRACE">
		<appender-ref ref="API_getNSVODRankAp" />
	</logger>
	<logger name="API_Common_getNSVODRank" level="TRACE">
		<appender-ref ref="API_getNSVODRankAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSListsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSLists.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSLists.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getNSLists" level="TRACE">
		<appender-ref ref="API_getNSListsAp" />
	</logger>
	<logger name="API_Common_getNSLists" level="TRACE">
		<appender-ref ref="API_getNSListsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSContListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSContList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSContList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSContList" level="TRACE">
		<appender-ref ref="API_getNSContListAp" />
	</logger>
	<logger name="API_Common_getNSContList" level="TRACE">
		<appender-ref ref="API_getNSContListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSContDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSContDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSContDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSContDtl" level="TRACE">
		<appender-ref ref="API_getNSContDtlAp" />
	</logger>
	<logger name="API_Common_getNSContDtl" level="TRACE">
		<appender-ref ref="API_getNSContDtlAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSContStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSContStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSContStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSContStat" level="TRACE">
		<appender-ref ref="API_getNSContStatAp" />
	</logger>
	<logger name="API_Common_getNSContStat" level="TRACE">
		<appender-ref ref="API_getNSContStatAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSLiveStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSLiveStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSLiveStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSLiveStat" level="TRACE">
		<appender-ref ref="API_getNSLiveStatAp" />
	</logger>
	<logger name="API_Common_getNSLiveStat" level="TRACE">
		<appender-ref ref="API_getNSLiveStatAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_getNSInfoByDCAAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSInfoByDCA.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSInfoByDCA.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSInfoByDCA" level="TRACE">
		<appender-ref ref="API_getNSInfoByDCAAp" />
	</logger>
	<logger name="API_Common_getNSInfoByDCA" level="TRACE">
		<appender-ref ref="API_getNSInfoByDCAAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_setNSRatingAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}setNSRating.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}setNSRating.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_setNSRating" level="TRACE">
		<appender-ref ref="API_setNSRatingAp" />
	</logger>
	<logger name="API_Common_setNSRating" level="TRACE">
		<appender-ref ref="API_setNSRatingAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
        
    <appender name="API_buyNSContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}buyNSConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}buyNSConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_buyNSConts" level="TRACE">
		<appender-ref ref="API_buyNSContsAp" />
	</logger>
	<logger name="API_Common_buyNSConts" level="TRACE">
		<appender-ref ref="API_buyNSContsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSPSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSPSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSPSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSPSI" level="TRACE">
		<appender-ref ref="API_getNSPSIAp" />
	</logger>
    <logger name="API_Common_getNSPSI" level="TRACE">
		<appender-ref ref="API_getNSPSIAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSSI%d{MMddyyyy}.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSSI" level="TRACE">
		<appender-ref ref="API_getNSSIAp" />
	</logger>
    <logger name="API_Common_getNSSI" level="TRACE">
		<appender-ref ref="API_getNSSIAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSCatBillInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSCatBillInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSCatBillInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSCatBillInfo" level="TRACE">
		<appender-ref ref="API_getNSCatBillInfoAp" />
	</logger>
    <logger name="API_Common_getNSCatBillInfo" level="TRACE">
		<appender-ref ref="API_getNSCatBillInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMultiContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMultiConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMultiConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMultiConts" level="TRACE">
		<appender-ref ref="API_getNSMultiContsAp" />
	</logger>
    <logger name="API_Common_getNSMultiConts" level="TRACE">
		<appender-ref ref="API_getNSMultiContsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSEncryptValAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSEncryptVal.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSEncryptVal.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSEncryptVal" level="TRACE">
		<appender-ref ref="API_getNSEncryptValAp" />
	</logger>
    <logger name="API_Common_getNSEncryptVal" level="TRACE">
		<appender-ref ref="API_getNSEncryptValAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_buyNSDMContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}buyNSDMConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}buyNSDMConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_buyNSDMConts" level="TRACE">
		<appender-ref ref="API_buyNSDMContsAp" />
	</logger>
    <logger name="API_Common_buyNSDMConts" level="TRACE">
		<appender-ref ref="API_buyNSDMContsAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSDMPurDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSDMPurDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSDMPurDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSDMPurDtl" level="TRACE">
		<appender-ref ref="API_getNSDMPurDtlAp" />
	</logger>
    <logger name="API_Common_getNSDMPurDtl" level="TRACE">
		<appender-ref ref="API_getNSDMPurDtlAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSPageListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSPageList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSPageList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSPageList" level="TRACE">
		<appender-ref ref="API_getNSPageListAp" />
	</logger>
    <logger name="API_Common_getNSPageList" level="TRACE">
		<appender-ref ref="API_getNSPageListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMainPromoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMainPromo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMainPromo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMainPromo" level="TRACE">
		<appender-ref ref="API_getNSMainPromoAp" />
	</logger>
    <logger name="API_Common_getNSMainPromo" level="TRACE">
		<appender-ref ref="API_getNSMainPromoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getCopyCacheAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getCopyCache.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getCopyCache.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getCopyCache" level="TRACE">
		<appender-ref ref="API_getCopyCacheAp" />
	</logger>
    <logger name="API_Common_getCopyCache" level="TRACE">
		<appender-ref ref="API_getCopyCacheAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
    <appender name="API_getNSMnuList2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${API_LOG_FILE}getNSMnuList2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
             <fileNamePattern>${API_LOG_FILE}getNSMnuList2.log_%d{MMddyyyy}_%i</fileNamePattern>
             <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMnuList2" level="TRACE">
         <appender-ref ref="API_getNSMnuList2Ap" />
    </logger>
    <logger name="API_Common_getNSMnuList2" level="TRACE">
        <appender-ref ref="API_getNSMnuList2Ap" />
        <appender-ref ref="apiCommonAp" />
    </logger>
	
	<appender name="API_getNSMnuListDtl2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${API_LOG_FILE}getNSMnuListDtl2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
             <fileNamePattern>${API_LOG_FILE}getNSMnuListDtl2.log_%d{MMddyyyy}_%i</fileNamePattern>
             <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMnuListDtl2" level="TRACE">
         <appender-ref ref="API_getNSMnuListDtl2Ap" />
    </logger>
    <logger name="API_Common_getNSMnuListDtl2" level="TRACE">
        <appender-ref ref="API_getNSMnuListDtl2Ap" />
        <appender-ref ref="apiCommonAp" />
    </logger>
	
	<appender name="API_getNSChList2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSChList2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSChList2.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSChList2" level="DEBUG">
		<appender-ref ref="API_getNSChList2Ap" />
	</logger>
	<logger name="API_Common_getNSChList2" level="DEBUG">
		<appender-ref ref="API_getNSChList2Ap" />
		<appender-ref ref="apiCommonAp" />
	</logger>

	<appender name="API_getNSChPGM2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSChPGM2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSChPGM2.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSChPGM2" level="DEBUG">
		<appender-ref ref="API_getNSChPGM2Ap" />
	</logger>
    <logger name="API_Common_getNSChPGM2" level="DEBUG">
		<appender-ref ref="API_getNSChPGM2Ap" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	 
	 <appender name="API_getNSChListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSChList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSChList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    	<logger name="API_getNSChList" level="DEBUG">
		<appender-ref ref="API_getNSChListAp" />
	</logger>
	<logger name="API_Common_getNSChList" level="DEBUG">
		<appender-ref ref="API_getNSChListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>

	<appender name="API_getNSBuyListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSBuyList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSBuyList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSBuyList" level="DEBUG">
		<appender-ref ref="API_getNSBuyListAp" />
	</logger>
    <logger name="API_Common_getNSBuyList" level="DEBUG">
		<appender-ref ref="API_getNSBuyListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
		<appender name="API_getNSHighLightAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSHighLight.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSHighLight.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSHighLight" level="DEBUG">
		<appender-ref ref="API_getNSHighLightAp" />
	</logger>
    <logger name="API_Common_getNSHighLight" level="DEBUG">
		<appender-ref ref="API_getNSHighLightAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<!-- API_LOG -->
	
	<!-- API_LOG 20190408 -->
	
    <appender name="API_getNSChPGMAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSChPGM.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSChPGM.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSChPGM" level="DEBUG">
		<appender-ref ref="API_getNSChPGMAp" />
	</logger>
    <logger name="API_Common_getNSChPGM" level="DEBUG">
		<appender-ref ref="API_getNSChPGMAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMakeChPGMAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMakeChPGM.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMakeChPGM.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMakeChPGM" level="DEBUG">
		<appender-ref ref="API_getNSMakeChPGMAp" />
	</logger>
    <logger name="API_Common_getNSMakeChPGM" level="DEBUG">
		<appender-ref ref="API_getNSMakeChPGMAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSContInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSContInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSContInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSContInfo" level="DEBUG">
		<appender-ref ref="API_getNSContInfoAp" />
	</logger>
    <logger name="API_Common_getNSContInfo" level="DEBUG">
		<appender-ref ref="API_getNSContInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSContReviewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSContReview.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSContReview.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSContReview" level="DEBUG">
		<appender-ref ref="API_getNSContReviewAp" />
	</logger>
    <logger name="API_Common_getNSContReview" level="DEBUG">
		<appender-ref ref="API_getNSContReviewAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSCustInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSCustInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSCustInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSCustInfo" level="DEBUG">
		<appender-ref ref="API_getNSCustInfoAp" />
	</logger>
    <logger name="API_Common_getNSCustInfo" level="DEBUG">
		<appender-ref ref="API_getNSCustInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMakeNodeListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMakeNodeList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMakeNodeList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMakeNodeList" level="DEBUG">
		<appender-ref ref="API_getNSMakeNodeListAp" />
	</logger>
    <logger name="API_Common_getNSMakeNodeList" level="DEBUG">
		<appender-ref ref="API_getNSMakeNodeListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMnuListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMnuList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMnuList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMnuList" level="DEBUG">
		<appender-ref ref="API_getNSMnuListAp" />
	</logger>
    <logger name="API_Common_getNSMnuList" level="DEBUG">
		<appender-ref ref="API_getNSMnuListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMnuListDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMnuListDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMnuListDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMnuListDtl" level="DEBUG">
		<appender-ref ref="API_getNSMnuListDtlAp" />
	</logger>
    <logger name="API_Common_getNSMnuListDtl" level="DEBUG">
		<appender-ref ref="API_getNSMnuListDtlAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMusicListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMusicList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMusicList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMusicList" level="DEBUG">
		<appender-ref ref="API_getNSMusicListAp" />
	</logger>
    <logger name="API_Common_getNSMusicList" level="DEBUG">
		<appender-ref ref="API_getNSMusicListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSNodeListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSNodeList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSNodeList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSNodeList" level="TRACE">
		<appender-ref ref="API_getNSNodeListAp" />
	</logger>
    <logger name="API_Common_getNSNodeList" level="TRACE">
		<appender-ref ref="API_getNSNodeListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSSeriesListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSSeriesList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSSeriesList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSSeriesList" level="DEBUG">
		<appender-ref ref="API_getNSSeriesListAp" />
	</logger>
    <logger name="API_Common_getNSSeriesList" level="DEBUG">
		<appender-ref ref="API_getNSSeriesListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSChnlPlayIPAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSChnlPlayIP.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSChnlPlayIP.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSChnlPlayIP" level="DEBUG">
		<appender-ref ref="API_getNSChnlPlayIPAp" />
	</logger>
	<logger name="API_Common_getNSChnlPlayIP" level="DEBUG">
		<appender-ref ref="API_getNSChnlPlayIPAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSVodPlayIPAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSVodPlayIP.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSVodPlayIP.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSVodPlayIP" level="DEBUG">
		<appender-ref ref="API_getNSVodPlayIPAp" />
	</logger>
    <logger name="API_Common_getNSVodPlayIP" level="DEBUG">
		<appender-ref ref="API_getNSVodPlayIPAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>

	<appender name="API_getNSWatchListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSWatchList.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSWatchList.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSWatchList" level="DEBUG">
		<appender-ref ref="API_getNSWatchListAp" />
	</logger>
	<logger name="API_Common_getNSWatchList" level="DEBUG">
		<appender-ref ref="API_getNSWatchListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSMakePrefIPAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMakePrefIP.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMakePrefIP.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSMakePrefIP" level="DEBUG">
		<appender-ref ref="API_getNSMakePrefIPAp" />
	</logger>
    <logger name="API_Common_getNSMakePrefIP" level="DEBUG">
		<appender-ref ref="API_getNSMakePrefIPAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>	

    <appender name="API_getNSVoteAlbumAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${API_LOG_FILE}getNSVoteAlbum.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSVoteAlbum.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSVoteAlbum" level="DEBUG">
        <appender-ref ref="API_getNSVoteAlbumAp" />
    </logger>
    <logger name="API_Common_getNSVoteAlbum" level="DEBUG">
        <appender-ref ref="API_getNSVoteAlbum" />
        <appender-ref ref="apiCommonAp" />
    </logger>
	<!-- API_LOG 20190408 -->	

	<!-- FXAPI_LOG -->
	<appender name="API_setFXFavorGenreAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}setFXFavorGenre.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}setFXFavorGenre.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_setFXFavorGenre" level="TRACE">
		<appender-ref ref="API_setFXFavorGenreAp" />
	</logger>
	<logger name="API_Common_setFXFavorGenre" level="TRACE">
		<appender-ref ref="API_setFXFavorGenreAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getFXFavorGenreAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getFXFavorGenre.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getFXFavorGenre.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getFXFavorGenre" level="TRACE">
		<appender-ref ref="API_getFXFavorGenreAp" />
	</logger>
	<logger name="API_Common_getFXFavorGenre" level="TRACE">
		<appender-ref ref="API_getFXFavorGenreAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getFXProdInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getFXProdInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getFXProdInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getFXProdInfo" level="TRACE">
		<appender-ref ref="API_getFXProdInfoAp" />
	</logger>
	<logger name="API_Common_getFXProdInfo" level="TRACE">
		<appender-ref ref="API_getFXProdInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getFXRelationAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getFXRelation.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getFXRelation.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getFXRelation" level="TRACE">
		<appender-ref ref="API_getFXRelationAp" />
	</logger>
	<logger name="API_Common_getFXRelation" level="TRACE">
		<appender-ref ref="API_getFXRelationAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getFXContStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getFXContStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getFXContStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getFXContStat" level="TRACE">
		<appender-ref ref="API_getFXContStatAp" />
	</logger>
	<logger name="API_Common_getFXContStat" level="TRACE">
		<appender-ref ref="API_getFXContStatAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getFXFavorListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getFXFavorList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getFXFavorList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getFXFavorList" level="TRACE">
		<appender-ref ref="API_getFXFavorListAp" />
	</logger>
	<logger name="API_Common_getFXFavorList" level="TRACE">
		<appender-ref ref="API_getFXFavorListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_rmFXFavoriteAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmFXFavorite.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmFXFavorite.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_rmFXFavorite" level="TRACE">
		<appender-ref ref="API_rmFXFavoriteAp" />
	</logger>
	<logger name="API_Common_rmFXFavorite" level="TRACE">
		<appender-ref ref="API_rmFXFavoriteAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_rmFXAllFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmFXAllFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmFXAllFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_rmFXAllFavor" level="TRACE">
		<appender-ref ref="API_rmFXAllFavorAp" />
	</logger>
	<logger name="API_Common_rmFXAllFavor" level="TRACE">
		<appender-ref ref="API_rmFXAllFavorAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_addFXFavoriteAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}addFXFavorite.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}addFXFavorite.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_addFXFavorite" level="TRACE">
		<appender-ref ref="API_addFXFavoriteAp" />
	</logger>
	<logger name="API_Common_addFXFavorite" level="TRACE">
		<appender-ref ref="API_addFXFavoriteAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getFXRepositedAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getFXReposited.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getFXReposited.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getFXReposited" level="TRACE">
		<appender-ref ref="API_getFXRepositedAp" />
	</logger>
	<logger name="API_Common_getFXReposited" level="TRACE">
		<appender-ref ref="API_getFXRepositedAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_rmFXWatchHisAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmFXWatchHis.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmFXWatchHis.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_rmFXWatchHis" level="TRACE">
		<appender-ref ref="API_rmFXWatchHisAp" />
	</logger>
	<logger name="API_Common_rmFXWatchHis" level="TRACE">
		<appender-ref ref="API_rmFXWatchHisAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_rmFXAllWatchHisAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}rmFXAllWatchHis.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}rmFXAllWatchHis.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_rmFXAllWatchHis" level="TRACE">
		<appender-ref ref="API_rmFXAllWatchHisAp" />
	</logger>
	<logger name="API_Common_rmFXAllWatchHis" level="TRACE">
		<appender-ref ref="API_rmFXAllWatchHisAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getNSMusicCueAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSMusicCue.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSMusicCue.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getNSMusicCue" level="TRACE">
		<appender-ref ref="API_getNSMusicCueAp" />
	</logger>
	<logger name="API_Common_getNSMusicCue" level="TRACE">
		<appender-ref ref="API_getNSMusicCueAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<appender name="API_getNSSeriesStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSSeriesStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSSeriesStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
	<logger name="API_getNSSeriesStat" level="TRACE">
		<appender-ref ref="API_getNSSeriesStatAp" />
	</logger>
	<logger name="API_Common_getNSSeriesStat" level="TRACE">
		<appender-ref ref="API_getNSSeriesStatAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSViewInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSViewInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSViewInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSViewInfo" level="DEBUG">
		<appender-ref ref="API_getNSViewInfoAp" />
	</logger>
    <logger name="API_Common_getNSViewInfo" level="DEBUG">
		<appender-ref ref="API_getNSViewInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_getNSComBotListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSComBotList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSComBotList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSComBotList" level="DEBUG">
		<appender-ref ref="API_getNSComBotListAp" />
	</logger>
    <logger name="API_Common_getNSComBotList" level="DEBUG">
		<appender-ref ref="API_getNSComBotListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	
	<!-- FXAPI_LOG END -->
<!-- 2020.01 모바일 아이들나라 LOG -->
	<!-- getNSKidsList -->
	<appender name="API_getNSKidsListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSKidsList.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSKidsList.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSKidsList" level="TRACE">
		<appender-ref ref="API_getNSKidsListAp" />
	</logger>
	<logger name="API_Common_getNSKidsList" level="TRACE">
		<appender-ref ref="API_getNSKidsListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSKidsList -->
	
	<!-- getNSLastWatch -->
	<appender name="API_getNSLastWatchAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSLastWatch.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSLastWatch.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSLastWatch" level="TRACE">
		<appender-ref ref="API_getNSLastWatchAp" />
	</logger>
	<logger name="API_Common_getNSLastWatch" level="TRACE">
		<appender-ref ref="API_getNSLastWatchAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSLastWatch -->
	
	<!-- getNSMapInfo -->
	<appender name="API_getNSMapInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSMapInfo.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSMapInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSMapInfo" level="TRACE">
		<appender-ref ref="API_getNSMapInfoAp" />
	</logger>
	<logger name="API_Common_getNSMapInfo" level="TRACE">
		<appender-ref ref="API_getNSMapInfoAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSMapInfo -->
	
	<!-- getNSAlbumStat -->
	<appender name="API_getNSAlbumStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSAlbumStat.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSAlbumStat.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSAlbumStat" level="TRACE">
		<appender-ref ref="API_getNSAlbumStatAp" />
	</logger>
	<logger name="API_Common_getNSAlbumStat" level="TRACE">
		<appender-ref ref="API_getNSAlbumStatAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSAlbumStat -->
	
	<!-- getNSKidsWatch -->
	<appender name="API_getNSKidsWatchAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSKidsWatch.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSKidsWatch.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSKidsWatch" level="TRACE">
		<appender-ref ref="API_getNSKidsWatchAp" />
	</logger>
	<logger name="API_Common_getNSKidsWatch" level="TRACE">
		<appender-ref ref="API_getNSKidsWatchAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSKidsWatch -->
	
	<!-- getNSKidsEStudy -->
	<appender name="API_getNSKidsEStudyAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSKidsEStudy.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSKidsEStudy.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSKidsEStudy" level="TRACE">
		<appender-ref ref="API_getNSKidsEStudyAp" />
	</logger>
	<logger name="API_Common_getNSKidsEStudy" level="TRACE">
		<appender-ref ref="API_getNSKidsEStudyAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSKidsEStudy -->
	<!-- 2020.01 모바일 아이들나라 LOG END -->
	
	<!-- 2020.05 아이돌라이브2020 1Q LOG START -->
	<appender name="API_getNSPropertyListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}getNSPropertyList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}getNSPropertyList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_getNSPropertyList" level="TRACE">
		<appender-ref ref="API_getNSPropertyListAp" />
	</logger>
	<logger name="API_Common_getNSPropertyList" level="TRACE">
		<appender-ref ref="API_getNSPropertyListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- 2020.05 아이돌라이브2020 1Q LOG END -->
	
	<!-- 2020.07 모바일TV 9월향 LOG START -->
	<appender name="API_chkSubscribeProdAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${API_LOG_FILE}chkSubscribeProd.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${API_LOG_FILE}chkSubscribeProd.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <logger name="API_chkSubscribeProd" level="TRACE">
		<appender-ref ref="API_chkSubscribeProdAp" />
	</logger>
	<logger name="API_Common_chkSubscribeProd" level="TRACE">
		<appender-ref ref="API_chkSubscribeProdAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- 2020.07 모바일TV 9월향 LOG END -->
	
	<!-- 2020.07 모바일 아이들나라 4.0 LOG START -->
	<!-- getNSKidsHome -->
	<appender name="API_getNSKidsHomeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSKidsHome.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSKidsHome.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSKidsHome" level="TRACE">
		<appender-ref ref="API_getNSKidsHomeAp" />
	</logger>
	<logger name="API_Common_getNSKidsHome" level="TRACE">
		<appender-ref ref="API_getNSKidsHomeAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<!-- getNSSubCount -->
	<appender name="API_getNSSubCountAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSSubCount.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSSubCount.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSSubCount" level="TRACE">
		<appender-ref ref="API_getNSSubCountAp" />
	</logger>
	<logger name="API_Common_getNSSubCount" level="TRACE">
		<appender-ref ref="API_getNSSubCountAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<!-- getNSKidsMenu -->
	<appender name="API_getNSKidsMenuAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSKidsMenu.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSKidsMenu.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSKidsMenu" level="TRACE">
		<appender-ref ref="API_getNSKidsMenuAp" />
	</logger>
	<logger name="API_Common_getNSKidsMenu" level="TRACE">
		<appender-ref ref="API_getNSKidsMenuAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<!-- getNSGoodsList -->
	<appender name="API_getNSGoodsListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSGoodsList.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSGoodsList.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSGoodsList" level="TRACE">
		<appender-ref ref="API_getNSGoodsListAp" />
	</logger>
	<logger name="API_Common_getNSGoodsList" level="TRACE">
		<appender-ref ref="API_getNSGoodsListAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- 2020.07 모바일 아이들나라 4.0 LOG END -->
	
	<!-- getNSKidsGuide -->
	<appender name="API_getNSKidsGuideAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSKidsGuide.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSKidsGuide.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSKidsGuide" level="DEBUG">
		<appender-ref ref="API_getNSKidsGuideAp" />
	</logger>
	<logger name="API_Common_getNSKidsGuide" level="DEBUG">
		<appender-ref ref="API_getNSKidsGuideAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	<!-- getNSKidsGuide -->
	
	<appender name="API_getNSLinkTimeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}getNSLinkTime.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}getNSLinkTime.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_getNSLinkTime" level="DEBUG">
		<appender-ref ref="API_getNSLinkTimeAp" />
	</logger>
	<logger name="API_Common_getNSLinkTime" level="DEBUG">
		<appender-ref ref="API_getNSLinkTimeAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	
	<appender name="API_setNSCHWatchTimeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${API_LOG_FILE}setNSCHWatchTime.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${API_LOG_FILE}setNSCHWatchTime.log_%d{MMddyyyy}_%i</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>500MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder><pattern>${LOG_PATTERN}</pattern></encoder>
	</appender>
	<logger name="API_setNSCHWatchTime" level="DEBUG">
		<appender-ref ref="API_setNSCHWatchTimeAp" />
	</logger>
	<logger name="API_Common_setNSCHWatchTime" level="DEBUG">
		<appender-ref ref="API_setNSCHWatchTimeAp" />
		<appender-ref ref="apiCommonAp" />
	</logger>
	

	<!-- TLO_LOG --> 
    <appender name="TLO_getNSProdInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSProdInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSProdInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSProdInfo" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSProdInfoAp" />
	</logger>
	
    <appender name="TLO_buyNSProductAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_buyNSProduct.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_buyNSProduct.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_buyNSProduct" level="INFO" additivity="false">
		<appender-ref ref="TLO_buyNSProductAp" />
	</logger>
	    
    <appender name="TLO_getNSSVODInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSVODInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSVODInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSSVODInfo" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSSVODInfoAp" />
	</logger>
        
    <appender name="TLO_getNSProdCpInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSProdCpInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSProdCpInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSProdCpInfo" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSProdCpInfoAp" />
	</logger>
        
    <appender name="TLO_getNSVPSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSVPSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSVPSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSVPSI" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSVPSIAp" />
	</logger>
        
    <appender name="TLO_getNSVSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSVSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSVSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSVSI" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSVSIAp" />
	</logger>
        
    <appender name="TLO_rmCacheFileAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmCacheFile.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmCacheFile.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmCacheFile" level="INFO" additivity="false">
		<appender-ref ref="API_rmCacheFileAp" />
	</logger>
        
    <appender name="TLO_getNSMultiViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMultiView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMultiView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSMultiView" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSMultiViewAp" />
	</logger>
        
    <appender name="TLO_getNSCHListsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSCHLists.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSCHLists.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSCHLists" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSCHListsAp" />
	</logger>
        
    <appender name="TLO_buyContsCpAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_buyContsCp.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_buyContsCp.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_buyContsCp" level="INFO" additivity="false">
		<appender-ref ref="TLO_buyContsCpAp" />
	</logger>
        
    <appender name="TLO_buyNSContentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_buyNSContent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_buyNSContent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_buyNSContent" level="INFO" additivity="false">
		<appender-ref ref="TLO_buyNSContentAp" />
	</logger>
        
    <appender name="TLO_getNSPurchasedAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSPurchased.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSPurchased.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSPurchased" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSPurchasedAp" />
	</logger>
        
    <appender name="TLO_getNSRepositedAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSReposited.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSReposited.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSReposited" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSRepositedAp" />
	</logger>
        
    <appender name="TLO_authorizePViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_authorizePView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_authorizePView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_authorizePView" level="INFO" additivity="false">
		<appender-ref ref="TLO_authorizePViewAp" />
	</logger>
          
    <appender name="TLO_authorizeVViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_authorizeVView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_authorizeVView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_authorizeVView" level="INFO" additivity="false">
		<appender-ref ref="TLO_authorizeVViewAp" />
	</logger>
      
    <appender name="TLO_authorizeNViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_authorizeNView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_authorizeNView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_authorizeNView" level="INFO" additivity="false">
		<appender-ref ref="TLO_authorizeNViewAp" />
	</logger>
        
    <appender name="TLO_authorizeNSViewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_authorizeNSView.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_authorizeNSView.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_authorizeNSView" level="INFO" additivity="false">
		<appender-ref ref="TLO_authorizeNSViewAp" />
	</logger>
        
    <appender name="TLO_setNSPassedTimeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_setNSPassedTime.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_setNSPassedTime.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_setNSPassedTime" level="INFO" additivity="false">
		<appender-ref ref="TLO_setNSPassedTimeAp" />
	</logger>
        
    <appender name="TLO_chkBuyNSPGAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_chkBuyNSPG.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_chkBuyNSPG.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_chkBuyNSPG" level="INFO" additivity="false">
		<appender-ref ref="TLO_chkBuyNSPGAp" />
	</logger>
        
    <appender name="TLO_chkBuyNSContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_chkBuyNSConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_chkBuyNSConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_chkBuyNSConts" level="INFO" additivity="false">
		<appender-ref ref="TLO_chkBuyNSContsAp" />
	</logger>
        
    <appender name="TLO_getNSMainPromosAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMainPromos.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMainPromos.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSMainPromos" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSMainPromosAp" />
	</logger>
        
    <appender name="TLO_buyNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_buyNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_buyNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_buyNSPresent" level="INFO" additivity="false">
		<appender-ref ref="TLO_buyNSPresentAp" />
	</logger>
        
    <appender name="TLO_getNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSPresent" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSPresentAp" />
	</logger>
        
    <appender name="TLO_rmNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSPresent" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSPresentAp" />
	</logger>
        
    <appender name="TLO_useNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_useNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_useNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_useNSPresent" level="INFO" additivity="false">
		<appender-ref ref="TLO_useNSPresentAp" />
	</logger>
        
    <appender name="TLO_useNSPresentAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_useNSPresent.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_useNSPresent.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_useNSPresent" level="INFO" additivity="false">
		<appender-ref ref="TLO_useNSPresentAp" />
	</logger>
        
    <appender name="TLO_getNSFavorListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSFavorList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSFavorList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSFavorList" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSFavorListAp" />
	</logger>
        
    <appender name="TLO_rmNSCHFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSCHFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSCHFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSCHFavor" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSCHFavorAp" />
	</logger>
        
    <appender name="TLO_rmNSWatchHisAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSWatchHis.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSWatchHis.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSWatchHis" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSWatchHisAp" />
	</logger>
        
    <appender name="TLO_rmNSFavoriteAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSFavorite.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSFavorite.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSFavorite" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSFavoriteAp" />
	</logger>
        
    <appender name="TLO_rmNSAllCHFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllCHFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllCHFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSAllCHFavor" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSAllCHFavorAp" />
	</logger>
        
    <appender name="TLO_rmNSAllWatchHisAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllWatchHis.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllWatchHis.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSAllWatchHis" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSAllWatchHisAp" />
	</logger>
        
    <appender name="TLO_rmNSAllFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSAllFavor" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSAllFavorAp" />
	</logger>
        
    <appender name="TLO_moveNSFavorIdxAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_moveNSFavorIdx.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_moveNSFavorIdx.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_moveNSFavorIdx" level="INFO" additivity="false">
		<appender-ref ref="TLO_moveNSFavorIdxAp" />
	</logger>
        
    <appender name="TLO_addNSCHFavorAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_addNSCHFavor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_addNSCHFavor.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_addNSCHFavor" level="INFO" additivity="false">
		<appender-ref ref="TLO_addNSCHFavorAp" />
	</logger>
        
    <appender name="TLO_addNSFavoriteAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_addNSFavorite.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_addNSFavorite.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_addNSFavorite" level="INFO" additivity="false">
		<appender-ref ref="TLO_addNSFavoriteAp" />
	</logger>
        
    <appender name="TLO_getNSMainPageAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMainPage.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMainPage.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSMainPage" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSMainPageAp" />
	</logger>
        
    <appender name="TLO_getNSGuideVodAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSGuideVod.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSGuideVod.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSGuideVod" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSGuideVodAp" />
	</logger>
        
    <appender name="TLO_setNSPointAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_setNSPoint.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_setNSPoint.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_setNSPoint" level="INFO" additivity="false">
		<appender-ref ref="TLO_setNSPointAp" />
	</logger>
        
    <appender name="TLO_getNSCHRankAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSCHRank.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSCHRank.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSCHRank" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSCHRankAp" />
	</logger>
        
    <appender name="TLO_addNSAlertAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_addNSAlert.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_addNSAlert.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_addNSAlert" level="INFO" additivity="false">
		<appender-ref ref="TLO_addNSAlertAp" />
	</logger>
        
    <appender name="TLO_rmNSAlertAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAlert.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAlert.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSAlert" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSAlertAp" />
	</logger>
        
    <appender name="TLO_rmNSAllAlertAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllAlert.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_rmNSAllAlert.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_rmNSAllAlert" level="INFO" additivity="false">
		<appender-ref ref="TLO_rmNSAllAlertAp" />
	</logger>
        
    <appender name="TLO_getNSAlertListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSAlertList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSAlertList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSAlertList" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSAlertListAp" />
	</logger>
        
    <appender name="TLO_getNSMakeListsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakeLists.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakeLists.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSMakeLists" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSMakeListsAp" />
	</logger>
        
    <appender name="TLO_getNSSuggestVODAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSuggestVOD.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSuggestVOD.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSSuggestVOD" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSSuggestVODAp" />
	</logger>
        
    <appender name="TLO_searchByNSStrAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_searchByNSStr.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_searchByNSStr.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_searchByNSStr" level="INFO" additivity="false">
		<appender-ref ref="TLO_searchByNSStrAp" />
	</logger>
        
    <appender name="TLO_getNSAlbumListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSAlbumList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSAlbumList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSAlbumList" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSAlbumListAp" />
	</logger>
        
    <appender name="TLO_getNSCHRatingsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSCHRatings.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSCHRatings.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSCHRatings" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSCHRatingsAp" />
	</logger>
        
    <appender name="TLO_getNSVisitDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSVisitDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSVisitDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSVisitDtl" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSVisitDtlAp" />
	</logger>
        
    <appender name="TLO_getNSSimilarListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSimilarList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSimilarList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSSimilarList" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSSimilarListAp" />
	</logger>
        
    <appender name="TLO_getNSContVodAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSContVod.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSContVod.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSContVod" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSContVodAp" />
	</logger>
        
    <appender name="TLO_getNSPeriodAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSPeriod.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSPeriod.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSPeriod" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSPeriodAp" />
	</logger>
        
    <appender name="TLO_getNSVODRankAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSVODRank.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSVODRank.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSVODRank" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSVODRankAp" />
	</logger>
        
    <appender name="TLO_getNSListsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSLists.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSLists.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSLists" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSListsAp" />
	</logger>
        
    <appender name="TLO_getNSContListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSContList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSContList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSContList" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSContListAp" />
	</logger>
        
    <appender name="TLO_getNSContDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSContDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSContDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSContDtl" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSContDtlAp" />
	</logger>
        
    <appender name="TLO_getNSContStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSContStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSContStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSContStat" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSContStatAp" />
	</logger>
	
	<appender name="TLO_getNSLiveStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSLiveStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSLiveStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSLiveStat" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSLiveStatAp" />
	</logger>
        
    <appender name="TLO_getNSInfoByDCAAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSInfoByDCA.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSInfoByDCA.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSInfoByDCA" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSInfoByDCAAp" />
	</logger>
        
    <appender name="TLO_setNSRatingAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_setNSRating.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_setNSRating.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_setNSRating" level="INFO" additivity="false">
		<appender-ref ref="TLO_setNSRatingAp" />
	</logger>
        
    <appender name="TLO_buyNSContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_buyNSConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_buyNSConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_buyNSConts" level="INFO" additivity="false">
		<appender-ref ref="TLO_buyNSContsAp" />
	</logger>
	
	<appender name="TLO_getNSPSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSPSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSPSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSPSI" level="INFO">
		<appender-ref ref="TLO_getNSPSIAp" />
	</logger>
	
	<appender name="TLO_getNSSIAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSI.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSI.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSSI" level="INFO">
		<appender-ref ref="TLO_getNSSIAp" />
	</logger>
	
	<appender name="TLO_getNSCatBillInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSCatBillInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSCatBillInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSCatBillInfo" level="INFO">
		<appender-ref ref="TLO_getNSCatBillInfoAp" />
	</logger>
	
	<appender name="TLO_getNSMultiContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMultiConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMultiConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMultiConts" level="INFO">
		<appender-ref ref="TLO_getNSMultiContsAp" />
	</logger>
	
	<appender name="TLO_getNSEncryptValAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSEncryptVal.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSEncryptVal.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSEncryptVal" level="INFO">
		<appender-ref ref="TLO_getNSEncryptValAp" />
	</logger>
	
	<appender name="TLO_buyNSDMContsAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_buyNSDMConts.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_buyNSDMConts.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_buyNSDMConts" level="INFO">
		<appender-ref ref="TLO_buyNSDMContsAp" />
	</logger>
	
	<appender name="TLO_getNSDMPurDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSDMPurDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSDMPurDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSDMPurDtl" level="INFO">
		<appender-ref ref="TLO_getNSDMPurDtlAp" />
	</logger>
	
	<appender name="TLO_getNSPageListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSPageList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSPageList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSPageList" level="INFO">
		<appender-ref ref="TLO_getNSPageListAp" />
	</logger>
	<!-- TLO_LOG -->
		<!-- TLO_LOG 20190408 -->
	
	<appender name="TLO_getNSChPGMAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSChPGM.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSChPGM.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSChPGM" level="DEBUG">
		<appender-ref ref="TLO_getNSChPGMAp" />
	</logger>
	
	<appender name="TLO_getNSMakeChPGMAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakeChPGM.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakeChPGM.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMakeChPGM" level="DEBUG">
		<appender-ref ref="TLO_getNSMakeChPGMAp" />
	</logger>
	
	<appender name="TLO_getNSContInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSContInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSContInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSContInfo" level="DEBUG">
		<appender-ref ref="TLO_getNSContInfoAp" />
	</logger>
	
	<appender name="TLO_getNSContReviewAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSContReview.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSContReview.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSContReview" level="DEBUG">
		<appender-ref ref="TLO_getNSContReviewAp" />
	</logger>
	
	<appender name="TLO_getNSCustInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSCustInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSCustInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSCustInfo" level="DEBUG">
		<appender-ref ref="TLO_getNSCustInfoAp" />
	</logger>
	
	<appender name="TLO_getNSMakeNodeListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakeNodeList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakeNodeList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMakeNodeList" level="DEBUG">
		<appender-ref ref="TLO_getNSMakeNodeListAp" />
	</logger>
	
	<appender name="TLO_getNSMnuListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMnuList" level="DEBUG">
		<appender-ref ref="TLO_getNSMnuListAp" />
	</logger>
	
	<appender name="TLO_getCopyCacheAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getCopyCache.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getCopyCache.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getCopyCache" level="DEBUG">
		<appender-ref ref="TLO_getCopyCacheAp" />
	</logger>
	
	<appender name="TLO_getNSMnuList2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuList2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuList2.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMnuList2" level="DEBUG">
		<appender-ref ref="TLO_getNSMnuList2Ap" />
	</logger>
	
	<appender name="TLO_getNSMnuListDtl2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuListDtl2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuListDtl2.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMnuListDtl2" level="DEBUG">
		<appender-ref ref="TLO_getNSMnuListDtl2Ap" />
	</logger>
	
	<appender name="TLO_getNSChList2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSChList2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSChList2.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSChList2" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSChList2Ap" />
	</logger>
	
	<appender name="TLO_getNSChPGM2Ap" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSChPGM2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSChPGM2.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSChPGM2" level="DEBUG">
		<appender-ref ref="TLO_getNSChPGM2Ap" />
	</logger>
	
	<appender name="TLO_getNSMnuListDtlAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuListDtl.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMnuListDtl.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMnuListDtl" level="DEBUG">
		<appender-ref ref="TLO_getNSMnuListDtlAp" />
	</logger>
	
	<appender name="TLO_getNSMusicListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMusicList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMusicList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMusicList" level="DEBUG">
		<appender-ref ref="TLO_getNSMusicListAp" />
	</logger>
	
	<appender name="TLO_getNSNodeListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSNodeList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSNodeList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSNodeList" level="DEBUG">
		<appender-ref ref="TLO_getNSNodeListAp" />
	</logger>
	
	<appender name="TLO_getNSSeriesListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSeriesList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSeriesList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSSeriesList" level="DEBUG">
		<appender-ref ref="TLO_getNSSeriesListAp" />
	</logger>
	
	<appender name="TLO_getNSChListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSChList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSChList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
	<logger name="TLO_getNSChList" level="INFO" additivity="false">
		<appender-ref ref="TLO_getNSChListAp" />
	</logger>

	<appender name="TLO_getNSBuyListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSBuyList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSBuyList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSBuyList" level="DEBUG">
		<appender-ref ref="TLO_getNSBuyListAp" />
	</logger>
	
	<appender name="TLO_getNSChnlPlayIPAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSChnlPlayIP.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSChnlPlayIP.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSChnlPlayIP" level="DEBUG">
		<appender-ref ref="TLO_getNSChnlPlayIPAp" />
	</logger>	

	<appender name="TLO_getNSVodPlayIPAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSVodPlayIP.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSVodPlayIP.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSVodPlayIP" level="DEBUG">
		<appender-ref ref="TLO_getNSVodPlayIPAp" />
	</logger>	

	<appender name="TLO_getNSWatchListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSWatchList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSWatchList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSWatchList" level="DEBUG">
		<appender-ref ref="TLO_getNSWatchListAp" />
	</logger>
	
	<appender name="TLO_getNSMusicCueAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMusicCue.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMusicCue.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMusicCue" level="DEBUG">
		<appender-ref ref="TLO_getNSMusicCueAp" />
	</logger>
	
	<appender name="TLO_getNSSeriesStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSeriesStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSeriesStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSSeriesStat" level="DEBUG">
		<appender-ref ref="TLO_getNSSeriesStatAp" />
	</logger>
	
	<appender name="TLO_getNSMakePrefIPAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakePrefIP.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMakePrefIP.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMakePrefIP" level="DEBUG">
		<appender-ref ref="TLO_getNSMakePrefIPAp" />
	</logger>
	

    <appender name="TLO_getNSVoteAlbumAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${TLO_LOG_FILE}${tlolog.index.name}_getNSVoteAlbum.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSVoteAlbum.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSVoteAlbum" level="DEBUG">
        <appender-ref ref="TLO_getNSVoteAlbumAp" />
    </logger>
	
	<appender name="TLO_getNSViewInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSViewInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSViewInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSViewInfo" level="DEBUG">
		<appender-ref ref="TLO_getNSViewInfoAp" />
	</logger>
	
	<appender name="TLO_getNSComBotListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSComBotList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSComBotList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSComBotList" level="DEBUG">
		<appender-ref ref="TLO_getNSComBotListAp" />
	</logger>
	
		<appender name="TLO_getNSHighLightAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSHighLight.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSHighLight.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSHighLight" level="DEBUG">
		<appender-ref ref="TLO_getNSHighLightAp" />
	</logger>
	
<!-- 2020.01 모바일 아이들나라 TLO_LOG -->	
	<!-- getNSKidsList TLO LOG -->
	<appender name="TLO_getNSKidsListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSKidsList" level="DEBUG">
		<appender-ref ref="TLO_getNSKidsListAp" />
	</logger>
	<!-- getNSKidsList TLO LOG -->
	
	<!-- getNSLastWatch TLO LOG -->
	<appender name="TLO_getNSLastWatchAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSLastWatch.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSLastWatch.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSLastWatch" level="DEBUG">
		<appender-ref ref="TLO_getNSLastWatchAp" />
	</logger>
	<!-- getNSLastWatch TLO LOG -->
	
	<!-- getNSMapInfo TLO LOG -->
	<appender name="TLO_getNSMapInfoAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSMapInfo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSMapInfo.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSMapInfo" level="DEBUG">
		<appender-ref ref="TLO_getNSMapInfoAp" />
	</logger>
	<!-- getNSMapInfo TLO LOG -->
	
	<!-- getNSAlbumStat TLO LOG -->
	<appender name="TLO_getNSAlbumStatAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSAlbumStat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSAlbumStat.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSAlbumStat" level="DEBUG">
		<appender-ref ref="TLO_getNSAlbumStatAp" />
	</logger>
	<!-- getNSAlbumStat TLO LOG -->
	
	<!-- getNSKidsWatch TLO LOG -->
	<appender name="TLO_getNSKidsWatchAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsWatch.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsWatch.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSKidsWatch" level="DEBUG">
		<appender-ref ref="TLO_getNSKidsWatchAp" />
	</logger>
	<!-- getNSKidsWatch TLO LOG -->
	
	<!-- getNSKidsEStudy TLO LOG -->
	<appender name="TLO_getNSKidsEStudyAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsEStudy.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsEStudy.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSKidsEStudy" level="DEBUG">
		<appender-ref ref="TLO_getNSKidsEStudyAp" />
	</logger>
	<!-- getNSKidsEStudy TLO LOG -->	
	<!-- 2020.01 모바일 아이들나라 TLO_LOG -->
	
	<appender name="TLO_getNSPropertyListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${TLO_LOG_FILE}${tlolog.index.name}_getNSPropertyList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSPropertyList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
         <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSPropertyList" level="DEBUG">
        <appender-ref ref="TLO_getNSPropertyListAp" />
    </logger>
    
    <!-- 2020.07 모바일TV 9월향 TLO LOG START -->
    <appender name="TLO_chkSubscribeProdAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${TLO_LOG_FILE}${tlolog.index.name}_chkSubscribeProd.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_chkSubscribeProd.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
         <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_chkSubscribeProd" level="DEBUG">
        <appender-ref ref="TLO_chkSubscribeProdAp" />
    </logger>
	<!-- 2020.07 모바일TV 9월향 TLO LOG END -->

	<!-- TLO_LOG 20190408 -->
	
	<!-- 2020.07 모바일 아이들나라 4.0 TLO_LOG -->
	<!-- getNSKidsHome TLO LOG -->
	<appender name="TLO_getNSKidsHomeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsHome.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsHome.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSKidsHome" level="DEBUG">
		<appender-ref ref="TLO_getNSKidsHomeAp" />
	</logger>
	<!-- getNSKidsHome TLO LOG -->
	
	<!-- getNSSubCount TLO LOG -->
	<appender name="TLO_getNSSubCountAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSSubCount.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSSubCount.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSSubCount" level="DEBUG">
		<appender-ref ref="TLO_getNSSubCountAp" />
	</logger>
	<!-- getNSSubCount TLO LOG -->
	
	<!-- getNSKidsMenu TLO LOG -->
	<appender name="TLO_getNSKidsMenuAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsMenu.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsMenu.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSKidsMenu" level="DEBUG">
		<appender-ref ref="TLO_getNSKidsMenuAp" />
	</logger>
	<!-- getNSKidsMenu TLO LOG -->
	
	<!-- getNSGoodsList TLO LOG -->
	<appender name="TLO_getNSGoodsListAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSGoodsList.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSGoodsList.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSGoodsList" level="DEBUG">
		<appender-ref ref="TLO_getNSGoodsList" />
	</logger>
	<!-- getNSGoodsList TLO LOG -->
	<!-- 2020.07 모바일 아이들나라 4.0 TLO_LOG -->
	
	<!-- getNSKidsGuide TLO LOG -->
	<appender name="TLO_getNSKidsGuideAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsGuide.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSKidsGuide.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSKidsGuide" level="DEBUG">
		<appender-ref ref="TLO_getNSKidsGuideAp" />
	</logger>
	<!-- getNSKidsGuide TLO LOG -->
	
	<appender name="TLO_getNSLinkTimeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_getNSLinkTime.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_getNSLinkTime.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_getNSLinkTime" level="DEBUG">
		<appender-ref ref="TLO_getNSLinkTimeAp" />
	</logger>
	
	<appender name="TLO_setNSCHWatchTimeAp" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${TLO_LOG_FILE}${tlolog.index.name}_setNSCHWatchTime.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${TLO_LOG_FILE}${tlolog.index.name}_setNSCHWatchTime.log_%d{MMddyyyy}_%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><maxFileSize>500MB</maxFileSize></timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><pattern>${LOG_PATTERN2}</pattern></encoder>
    </appender>
    <logger name="TLO_setNSCHWatchTime" level="DEBUG">
		<appender-ref ref="TLO_setNSCHWatchTimeAp" />
	</logger>
	
	
<!-- --> 
    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
<!-- -->	
	<!-- 불필요한 NoSQL로그 제거 -->
	<logger name="org.apache.zookeeper" additivity="false" />
	<logger name="org.apache.hadoop" additivity="false" />

<!-- SQL -->
    <logger name="jdbc" level="OFF"/>
    <logger name="jdbc.sqlonly" level="ON"/>
   <logger name="jdbc.sqltiming" level="OFF"/>
    <logger name="jdbc.audit" level="OFF"/>
    <logger name="jdbc.resultset" level="OFF"/>
    <logger name="jdbc.resultsettable" level="INFO"/>
    <logger name="jdbc.connection" level="OFF"/>
<typeAliases></typeAliases>
</configuration>