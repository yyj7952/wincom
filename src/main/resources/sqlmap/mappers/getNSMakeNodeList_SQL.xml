<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="kr.co.wincom.imcs.api.getNSMakeNodeList.GetNSMakeNodeListDao">

	<select id="getNodeLists1" parameterType="GetNSMakeNodeListRequestVO" resultType="GetNSMakeNodeListResponseVO">
		 SELECT  SVC_NODE, 
		          BASE_GB, 
		          BASE_CD, 
		          LOADBALANCING_YN, 
		          RANK() over (partition by LOADBALANCING_SORT, base_gb order by base_cd) AS LOADBALANCING_SORT, 
		          STB_PLAY_IP1, STB_PLAY_IP2, STB_PLAY_IP3, CDN_LOCAL_TYP, CDN_NEAR_TYP, CDN_CENTER_TYP, 
		 		   fourD_replay_yn, IPV6_FLAG1, IPV6_FLAG2, IPV6_FLAG3,	
				   IPV6_PLAY_IP1, IPV6_PLAY_IP2, IPV6_PLAY_IP3, IPV6_CDN_TYPE1, IPV6_CDN_TYPE2, IPV6_CDN_TYPE3 
		  FROM 
		  ( 
		  SELECT  CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'W' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'F' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'V' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'D' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'R' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'L' THEN 'N' 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 8 THEN 'N' 
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND SUBSTR(RANGE_IP_CD,1,1) not in ('W','F','V','D','R','L') THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 1 THEN 'N' 
		          ELSE 'N' END AS SVC_NODE, 
		          CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'W' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'F' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'V' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'D' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'R' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'L' THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,2,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 8 THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND SUBSTR(RANGE_IP_CD,2,1) in ('P') THEN SUBSTR(RANGE_IP_CD,2,1)
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND SUBSTR(RANGE_IP_CD,2,1) in ('B') THEN SUBSTR(RANGE_IP_CD,2,1)
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND SUBSTR(RANGE_IP_CD,1,1) not in ('W','F','V','D','R','L') THEN 'N' || SUBSTR(RANGE_IP_CD,2,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 1 THEN 'N' || RANGE_IP_CD 
		               WHEN RANGE_IP_CD = '1234567890' THEN 'N' 
		          ELSE '' END AS BASE_GB, 
		          RANGE_IP_CD AS BASE_CD, 
		          CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) in ('W','F','V','D','R','L') THEN 'Y' 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN 'Y' 
		          ELSE 'N' END AS LOADBALANCING_YN, 
		          STB_PLAY_IP1, STB_PLAY_IP2, STB_PLAY_IP3, CDN_LOCAL_TYP, CDN_NEAR_TYP, CDN_CENTER_TYP, 
		          CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,1,2) 
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') != 0 THEN SUBSTR(RANGE_IP_CD,1,1) 
		          ELSE '' END AS LOADBALANCING_SORT, 
		 		  '' AS fourD_replay_yn, 
		 		  NVL(B.IPV6_FLAG1,'I') as IPV6_FLAG1, 
		 		  NVL(B.IPV6_FLAG2,'I') as IPV6_FLAG2, 
		 		  NVL(B.IPV6_FLAG3,'I') as IPV6_FLAG3, 
				  IPV6_PLAY_IP1, IPV6_PLAY_IP2, IPV6_PLAY_IP3, CDN_LOCAL_TYP AS IPV6_CDN_TYPE1, CDN_NEAR_TYP AS IPV6_CDN_TYPE2, CDN_CENTER_TYP AS IPV6_CDN_TYPE3 
		     FROM IMCSUSER.PT_LV_RANGE_IP_CHNL A, 
		          IMCSUSER.PT_LV_NODE_INFO B 
		    WHERE A.SUB_NODE_CD IS NOT NULL 
		      AND A.RANGE_IP_CD != 'W192.168' 
		      AND A.SUB_NODE_CD = B.SUB_NODE_CD 
		  	 AND NVL(A.USE_YN, 'Y') = 'Y' 
		  ) 
		  ORDER BY LOADBALANCING_YN DESC, BASE_CD 
	</select>
	
	<select id="getNodeLists2" parameterType="GetNSMakeNodeListRequestVO" resultType="GetNSMakeNodeListResponseVO">
		 SELECT  SVC_NODE, 
		          BASE_GB, 
		          BASE_CD, 
		          LOADBALANCING_YN, 
		          RANK() over (partition by LOADBALANCING_SORT, base_gb order by base_cd) AS LOADBALANCING_SORT, 
		          STB_PLAY_IP1, STB_PLAY_IP2, STB_PLAY_IP3, CDN_LOCAL_TYP, CDN_NEAR_TYP, CDN_CENTER_TYP, 
		 		   fourD_replay_yn, IPV6_FLAG1, IPV6_FLAG2, IPV6_FLAG3,	
				   IPV6_PLAY_IP1, IPV6_PLAY_IP2, IPV6_PLAY_IP3, IPV6_CDN_TYPE1, IPV6_CDN_TYPE2, IPV6_CDN_TYPE3 
		  FROM 
		  ( 
		  SELECT  CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'W' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'F' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'V' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'D' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'R' THEN 'N' 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'L' THEN 'N' 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 8 THEN 'N' 
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND SUBSTR(RANGE_IP_CD,1,1) not in ('W','F','V','D','R','L') THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 1 THEN 'N' 
		          ELSE 'N' END AS SVC_NODE, 
		          CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'W' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'F' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'V' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'D' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'R' THEN SUBSTR(RANGE_IP_CD,1,1) 
		 			   WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) = 'L' THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,2,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 8 THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND SUBSTR(RANGE_IP_CD,1,1) not in ('W','F','V','D','R','L') THEN 'N' || SUBSTR(RANGE_IP_CD,2,1) 
		               WHEN LENGTH(RANGE_IP_CD) = 1 THEN 'N' || RANGE_IP_CD 
		               WHEN RANGE_IP_CD = '1234567890' THEN 'N' 
		          ELSE '' END AS BASE_GB, 
		          RANGE_IP_CD AS BASE_CD, 
		          CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 AND SUBSTR(RANGE_IP_CD,1,1) in ('W','F','V','D','R','L') THEN 'Y' 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN 'Y' 
		          ELSE 'N' END AS LOADBALANCING_YN, 
		          STB_PLAY_IP1, STB_PLAY_IP2, STB_PLAY_IP3, CDN_LOCAL_TYP, CDN_NEAR_TYP, CDN_CENTER_TYP, 
		          CASE WHEN LENGTH(RANGE_IP_CD) >= 2 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 3 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,1,1) 
		               WHEN LENGTH(RANGE_IP_CD) >= 3 AND LENGTH(RANGE_IP_CD) <![CDATA[ <= ]]> 4 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,3,1), '[^0-9]') = 0 THEN SUBSTR(RANGE_IP_CD,1,2) 
		               WHEN LENGTH(RANGE_IP_CD) = 2 AND REGEXP_INSTR(SUBSTR(RANGE_IP_CD,2,1), '[^0-9]') != 0 THEN SUBSTR(RANGE_IP_CD,1,1) 
		          ELSE '' END AS LOADBALANCING_SORT, 
		 		  '' AS fourD_replay_yn, 
		 		  NVL(B.IPV6_FLAG1,'I') as IPV6_FLAG1, 
		 		  NVL(B.IPV6_FLAG2,'I') as IPV6_FLAG2, 
		 		  NVL(B.IPV6_FLAG3,'I') as IPV6_FLAG3, 
				  IPV6_PLAY_IP1, IPV6_PLAY_IP2, IPV6_PLAY_IP3, CDN_LOCAL_TYP AS IPV6_CDN_TYPE1, CDN_NEAR_TYP AS IPV6_CDN_TYPE2, CDN_CENTER_TYP AS IPV6_CDN_TYPE3 
		     FROM IMCSUSER.PT_LV_RANGE_IP_INFO A, 
		          IMCSUSER.PT_LV_NODE_INFO B 
		    WHERE A.SUB_NODE_CD IS NOT NULL 
		      AND A.RANGE_IP_CD != 'W192.168' 
		      AND A.SUB_NODE_CD = B.SUB_NODE_CD 
		  	 AND NVL(A.USE_YN, 'Y') = 'Y' 
		  ) 
		  ORDER BY LOADBALANCING_YN DESC, BASE_CD 
	</select>
	
</mapper> 